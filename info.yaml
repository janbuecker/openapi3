openapi: 3.0.0
servers:
    - { url: 'http://shopware.next/api' }
info:
    title: 'Shopware API'
    version: 1.0.0
security:
    - { bearerAuth: null }
tags:
    - { name: Auth, description: 'Endpoint for consumer authentication.' }
    - { name: Category, description: 'The endpoint for operations on Category' }
    - { name: 'Config Form', description: 'The endpoint for operations on Config Form' }
    - { name: 'Config Form Field', description: 'The endpoint for operations on Config Form Field' }
    - { name: 'Config Form Field Value', description: 'The endpoint for operations on Config Form Field Value' }
    - { name: Country, description: 'The endpoint for operations on Country' }
    - { name: 'Country Area', description: 'The endpoint for operations on Country Area' }
    - { name: 'Country State', description: 'The endpoint for operations on Country State' }
    - { name: Currency, description: 'The endpoint for operations on Currency' }
    - { name: Customer, description: 'The endpoint for operations on Customer' }
    - { name: 'Customer Address', description: 'The endpoint for operations on Customer Address' }
    - { name: 'Customer Group', description: 'The endpoint for operations on Customer Group' }
    - { name: 'Customer Group Discount', description: 'The endpoint for operations on Customer Group Discount' }
    - { name: 'Listing Facet', description: 'The endpoint for operations on Listing Facet' }
    - { name: 'Listing Sorting', description: 'The endpoint for operations on Listing Sorting' }
    - { name: Locale, description: 'The endpoint for operations on Locale' }
    - { name: Log, description: 'The endpoint for operations on Log' }
    - { name: Mail, description: 'The endpoint for operations on Mail' }
    - { name: 'Mail Attachment', description: 'The endpoint for operations on Mail Attachment' }
    - { name: Media, description: 'The endpoint for operations on Media' }
    - { name: 'Media Album', description: 'The endpoint for operations on Media Album' }
    - { name: Order, description: 'The endpoint for operations on Order' }
    - { name: 'Order Address', description: 'The endpoint for operations on Order Address' }
    - { name: 'Order Delivery', description: 'The endpoint for operations on Order Delivery' }
    - { name: 'Order Delivery Position', description: 'The endpoint for operations on Order Delivery Position' }
    - { name: 'Order Line Item', description: 'The endpoint for operations on Order Line Item' }
    - { name: 'Order State', description: 'The endpoint for operations on Order State' }
    - { name: 'Payment Method', description: 'The endpoint for operations on Payment Method' }
    - { name: Plugin, description: 'The endpoint for operations on Plugin' }
    - { name: Product, description: 'The endpoint for operations on Product' }
    - { name: 'Product Listing Price', description: 'The endpoint for operations on Product Listing Price' }
    - { name: 'Product Manufacturer', description: 'The endpoint for operations on Product Manufacturer' }
    - { name: 'Product Media', description: 'The endpoint for operations on Product Media' }
    - { name: 'Product Price', description: 'The endpoint for operations on Product Price' }
    - { name: 'Product Search Keyword', description: 'The endpoint for operations on Product Search Keyword' }
    - { name: 'Product Stream', description: 'The endpoint for operations on Product Stream' }
    - { name: 'Seo Url', description: 'The endpoint for operations on Seo Url' }
    - { name: 'Shipping Method', description: 'The endpoint for operations on Shipping Method' }
    - { name: 'Shipping Method Price', description: 'The endpoint for operations on Shipping Method Price' }
    - { name: Shop, description: 'The endpoint for operations on Shop' }
    - { name: 'Shop Template', description: 'The endpoint for operations on Shop Template' }
    - { name: 'Shop Template Config Form', description: 'The endpoint for operations on Shop Template Config Form' }
    - { name: 'Shop Template Config Form Field', description: 'The endpoint for operations on Shop Template Config Form Field' }
    - { name: 'Shop Template Config Form Field Value', description: 'The endpoint for operations on Shop Template Config Form Field Value' }
    - { name: 'Shop Template Config Preset', description: 'The endpoint for operations on Shop Template Config Preset' }
    - { name: Snippet, description: 'The endpoint for operations on Snippet' }
    - { name: Tax, description: 'The endpoint for operations on Tax' }
    - { name: 'Tax Area Rule', description: 'The endpoint for operations on Tax Area Rule' }
    - { name: Unit, description: 'The endpoint for operations on Unit' }
    - { name: User, description: 'The endpoint for operations on User' }
paths:
    /auth: { post: { tags: [Auth], security: [], requestBody: { content: { application/json: { schema: { $ref: '#/components/schemas/auth' } } } }, responses: { 200: { description: 'Response with authentication token for further requests', content: { application/json: { schema: { properties: { token: { type: string, description: 'The token that should be used for future requests.', example: eyJhbGciOiJSUzI1NiJ9.eyJyb2xlcyI6WyJJU19BVVRIRU5USUNBVEVEX0ZVTExZIiwiUk9MRV9BRE1JTiJdLCJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTE0OTAzODA3LCJleHAiOjE1MTQ5MDc0MDd9.b28BFrxJ_g6KvuGwbtI4LdhxBQOs3SEw_gIUD-zD6rzFyekACFwDupCSLX-emFDJb9UztJyugIGpEfdGkwtwUxf_gpHyV85FsfCMFlb00fUpdBXD8pP2qu9oBjVgtcPxLeKolY_OXdCcHR40yu-dnxb853uLnJhOIlPIJYMxayf7XLenYtOtQnJ9W7RlTOBLqFxa_qQqGV7wlhq8JUy9gyfbvxIPFE4hH53wQ4jagO6kUlOFYXKLn9lQrrWOhEMq7YqYImbRuWGu6i5a2sa1-k5BxqlzLR2B5WPteDTa7tDZqZsK1CSma5hz0zbusggg8iycQ-nvecAP9jQ6Z83ZEg }, expiry: { type: integer, description: 'Datetime as unix time when the token expires', example: 1514907407 } } } } } }, 400: { $ref: '#/components/responses/400' } } } }
    /category: { get: { summary: 'List with basic information of Category resources', tags: [Category], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Category resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/category_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/category?page[limit]=25' }, last: { example: '/category?page[limit]=25&page[offset]=250' }, next: { example: '/category?page[limit]=25&page[offset]=75' }, prev: { example: '/category?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Category resources', tags: [Category], requestBody: { description: 'Create a new Category resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/category_detail' } } } }, responses: { 200: { description: 'Detail of category_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/category_basic' } } }] } } } }, 400: { description: 'Detail of category_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/category_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/category/{id}': { get: { summary: 'Detailed information about a Category resource', tags: [Category], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the category', required: true }], responses: { 200: { description: 'Detail of category_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/category_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Category resource', tags: [Category], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the category', required: true }], requestBody: { description: 'Partially update information about a Category resource.', content: { application/json: { schema: { $ref: '#/components/schemas/category_detail' } } } }, responses: { 200: { description: 'Detail of category_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/category_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Category resource', tags: [Category], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the category', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /config-form: { get: { summary: 'List with basic information of Config Form resources', tags: ['Config Form'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Config Form resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/config_form_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/config-form?page[limit]=25' }, last: { example: '/config-form?page[limit]=25&page[offset]=250' }, next: { example: '/config-form?page[limit]=25&page[offset]=75' }, prev: { example: '/config-form?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Config Form resources', tags: ['Config Form'], requestBody: { description: 'Create a new Config Form resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/config_form_detail' } } } }, responses: { 200: { description: 'Detail of config_form_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_basic' } } }] } } } }, 400: { description: 'Detail of config_form_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/config-form/{id}': { get: { summary: 'Detailed information about a Config Form resource', tags: ['Config Form'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form', required: true }], responses: { 200: { description: 'Detail of config_form_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Config Form resource', tags: ['Config Form'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form', required: true }], requestBody: { description: 'Partially update information about a Config Form resource.', content: { application/json: { schema: { $ref: '#/components/schemas/config_form_detail' } } } }, responses: { 200: { description: 'Detail of config_form_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Config Form resource', tags: ['Config Form'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /config-form-field: { get: { summary: 'List with basic information of Config Form Field resources', tags: ['Config Form Field'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Config Form Field resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/config_form_field_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/config-form-field?page[limit]=25' }, last: { example: '/config-form-field?page[limit]=25&page[offset]=250' }, next: { example: '/config-form-field?page[limit]=25&page[offset]=75' }, prev: { example: '/config-form-field?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Config Form Field resources', tags: ['Config Form Field'], requestBody: { description: 'Create a new Config Form Field resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/config_form_field_detail' } } } }, responses: { 200: { description: 'Detail of config_form_field_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_basic' } } }] } } } }, 400: { description: 'Detail of config_form_field_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/config-form-field/{id}': { get: { summary: 'Detailed information about a Config Form Field resource', tags: ['Config Form Field'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form_field', required: true }], responses: { 200: { description: 'Detail of config_form_field_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Config Form Field resource', tags: ['Config Form Field'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form_field', required: true }], requestBody: { description: 'Partially update information about a Config Form Field resource.', content: { application/json: { schema: { $ref: '#/components/schemas/config_form_field_detail' } } } }, responses: { 200: { description: 'Detail of config_form_field_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Config Form Field resource', tags: ['Config Form Field'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form_field', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /config-form-field-value: { get: { summary: 'List with basic information of Config Form Field Value resources', tags: ['Config Form Field Value'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Config Form Field Value resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/config_form_field_value_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/config-form-field-value?page[limit]=25' }, last: { example: '/config-form-field-value?page[limit]=25&page[offset]=250' }, next: { example: '/config-form-field-value?page[limit]=25&page[offset]=75' }, prev: { example: '/config-form-field-value?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Config Form Field Value resources', tags: ['Config Form Field Value'], requestBody: { description: 'Create a new Config Form Field Value resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/config_form_field_value_detail' } } } }, responses: { 200: { description: 'Detail of config_form_field_value_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_value_basic' } } }] } } } }, 400: { description: 'Detail of config_form_field_value_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_value_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/config-form-field-value/{id}': { get: { summary: 'Detailed information about a Config Form Field Value resource', tags: ['Config Form Field Value'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form_field_value', required: true }], responses: { 200: { description: 'Detail of config_form_field_value_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_value_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Config Form Field Value resource', tags: ['Config Form Field Value'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form_field_value', required: true }], requestBody: { description: 'Partially update information about a Config Form Field Value resource.', content: { application/json: { schema: { $ref: '#/components/schemas/config_form_field_value_detail' } } } }, responses: { 200: { description: 'Detail of config_form_field_value_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/config_form_field_value_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Config Form Field Value resource', tags: ['Config Form Field Value'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the config_form_field_value', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /country: { get: { summary: 'List with basic information of Country resources', tags: [Country], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Country resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/country_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/country?page[limit]=25' }, last: { example: '/country?page[limit]=25&page[offset]=250' }, next: { example: '/country?page[limit]=25&page[offset]=75' }, prev: { example: '/country?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Country resources', tags: [Country], requestBody: { description: 'Create a new Country resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/country_detail' } } } }, responses: { 200: { description: 'Detail of country_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_basic' } } }] } } } }, 400: { description: 'Detail of country_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/country/{id}': { get: { summary: 'Detailed information about a Country resource', tags: [Country], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country', required: true }], responses: { 200: { description: 'Detail of country_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Country resource', tags: [Country], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country', required: true }], requestBody: { description: 'Partially update information about a Country resource.', content: { application/json: { schema: { $ref: '#/components/schemas/country_detail' } } } }, responses: { 200: { description: 'Detail of country_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Country resource', tags: [Country], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /country-area: { get: { summary: 'List with basic information of Country Area resources', tags: ['Country Area'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Country Area resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/country_area_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/country-area?page[limit]=25' }, last: { example: '/country-area?page[limit]=25&page[offset]=250' }, next: { example: '/country-area?page[limit]=25&page[offset]=75' }, prev: { example: '/country-area?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Country Area resources', tags: ['Country Area'], requestBody: { description: 'Create a new Country Area resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/country_area_detail' } } } }, responses: { 200: { description: 'Detail of country_area_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_area_basic' } } }] } } } }, 400: { description: 'Detail of country_area_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_area_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/country-area/{id}': { get: { summary: 'Detailed information about a Country Area resource', tags: ['Country Area'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country_area', required: true }], responses: { 200: { description: 'Detail of country_area_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_area_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Country Area resource', tags: ['Country Area'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country_area', required: true }], requestBody: { description: 'Partially update information about a Country Area resource.', content: { application/json: { schema: { $ref: '#/components/schemas/country_area_detail' } } } }, responses: { 200: { description: 'Detail of country_area_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_area_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Country Area resource', tags: ['Country Area'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country_area', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /country-state: { get: { summary: 'List with basic information of Country State resources', tags: ['Country State'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Country State resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/country_state_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/country-state?page[limit]=25' }, last: { example: '/country-state?page[limit]=25&page[offset]=250' }, next: { example: '/country-state?page[limit]=25&page[offset]=75' }, prev: { example: '/country-state?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Country State resources', tags: ['Country State'], requestBody: { description: 'Create a new Country State resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/country_state_detail' } } } }, responses: { 200: { description: 'Detail of country_state_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_state_basic' } } }] } } } }, 400: { description: 'Detail of country_state_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_state_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/country-state/{id}': { get: { summary: 'Detailed information about a Country State resource', tags: ['Country State'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country_state', required: true }], responses: { 200: { description: 'Detail of country_state_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_state_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Country State resource', tags: ['Country State'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country_state', required: true }], requestBody: { description: 'Partially update information about a Country State resource.', content: { application/json: { schema: { $ref: '#/components/schemas/country_state_detail' } } } }, responses: { 200: { description: 'Detail of country_state_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/country_state_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Country State resource', tags: ['Country State'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the country_state', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /currency: { get: { summary: 'List with basic information of Currency resources', tags: [Currency], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Currency resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/currency_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/currency?page[limit]=25' }, last: { example: '/currency?page[limit]=25&page[offset]=250' }, next: { example: '/currency?page[limit]=25&page[offset]=75' }, prev: { example: '/currency?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Currency resources', tags: [Currency], requestBody: { description: 'Create a new Currency resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/currency_detail' } } } }, responses: { 200: { description: 'Detail of currency_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/currency_basic' } } }] } } } }, 400: { description: 'Detail of currency_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/currency_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/currency/{id}': { get: { summary: 'Detailed information about a Currency resource', tags: [Currency], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the currency', required: true }], responses: { 200: { description: 'Detail of currency_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/currency_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Currency resource', tags: [Currency], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the currency', required: true }], requestBody: { description: 'Partially update information about a Currency resource.', content: { application/json: { schema: { $ref: '#/components/schemas/currency_detail' } } } }, responses: { 200: { description: 'Detail of currency_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/currency_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Currency resource', tags: [Currency], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the currency', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /customer: { get: { summary: 'List with basic information of Customer resources', tags: [Customer], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Customer resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/customer_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/customer?page[limit]=25' }, last: { example: '/customer?page[limit]=25&page[offset]=250' }, next: { example: '/customer?page[limit]=25&page[offset]=75' }, prev: { example: '/customer?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Customer resources', tags: [Customer], requestBody: { description: 'Create a new Customer resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_detail' } } } }, responses: { 200: { description: 'Detail of customer_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_basic' } } }] } } } }, 400: { description: 'Detail of customer_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/customer/{id}': { get: { summary: 'Detailed information about a Customer resource', tags: [Customer], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer', required: true }], responses: { 200: { description: 'Detail of customer_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Customer resource', tags: [Customer], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer', required: true }], requestBody: { description: 'Partially update information about a Customer resource.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_detail' } } } }, responses: { 200: { description: 'Detail of customer_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Customer resource', tags: [Customer], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /customer-address: { get: { summary: 'List with basic information of Customer Address resources', tags: ['Customer Address'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Customer Address resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/customer_address_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/customer-address?page[limit]=25' }, last: { example: '/customer-address?page[limit]=25&page[offset]=250' }, next: { example: '/customer-address?page[limit]=25&page[offset]=75' }, prev: { example: '/customer-address?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Customer Address resources', tags: ['Customer Address'], requestBody: { description: 'Create a new Customer Address resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_address_detail' } } } }, responses: { 200: { description: 'Detail of customer_address_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_address_basic' } } }] } } } }, 400: { description: 'Detail of customer_address_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_address_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/customer-address/{id}': { get: { summary: 'Detailed information about a Customer Address resource', tags: ['Customer Address'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_address', required: true }], responses: { 200: { description: 'Detail of customer_address_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_address_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Customer Address resource', tags: ['Customer Address'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_address', required: true }], requestBody: { description: 'Partially update information about a Customer Address resource.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_address_detail' } } } }, responses: { 200: { description: 'Detail of customer_address_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_address_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Customer Address resource', tags: ['Customer Address'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_address', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /customer-group: { get: { summary: 'List with basic information of Customer Group resources', tags: ['Customer Group'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Customer Group resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/customer_group_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/customer-group?page[limit]=25' }, last: { example: '/customer-group?page[limit]=25&page[offset]=250' }, next: { example: '/customer-group?page[limit]=25&page[offset]=75' }, prev: { example: '/customer-group?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Customer Group resources', tags: ['Customer Group'], requestBody: { description: 'Create a new Customer Group resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_group_detail' } } } }, responses: { 200: { description: 'Detail of customer_group_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_basic' } } }] } } } }, 400: { description: 'Detail of customer_group_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/customer-group/{id}': { get: { summary: 'Detailed information about a Customer Group resource', tags: ['Customer Group'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_group', required: true }], responses: { 200: { description: 'Detail of customer_group_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Customer Group resource', tags: ['Customer Group'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_group', required: true }], requestBody: { description: 'Partially update information about a Customer Group resource.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_group_detail' } } } }, responses: { 200: { description: 'Detail of customer_group_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Customer Group resource', tags: ['Customer Group'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_group', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /customer-group-discount: { get: { summary: 'List with basic information of Customer Group Discount resources', tags: ['Customer Group Discount'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Customer Group Discount resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/customer_group_discount_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/customer-group-discount?page[limit]=25' }, last: { example: '/customer-group-discount?page[limit]=25&page[offset]=250' }, next: { example: '/customer-group-discount?page[limit]=25&page[offset]=75' }, prev: { example: '/customer-group-discount?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Customer Group Discount resources', tags: ['Customer Group Discount'], requestBody: { description: 'Create a new Customer Group Discount resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_group_discount_detail' } } } }, responses: { 200: { description: 'Detail of customer_group_discount_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_discount_basic' } } }] } } } }, 400: { description: 'Detail of customer_group_discount_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_discount_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/customer-group-discount/{id}': { get: { summary: 'Detailed information about a Customer Group Discount resource', tags: ['Customer Group Discount'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_group_discount', required: true }], responses: { 200: { description: 'Detail of customer_group_discount_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_discount_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Customer Group Discount resource', tags: ['Customer Group Discount'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_group_discount', required: true }], requestBody: { description: 'Partially update information about a Customer Group Discount resource.', content: { application/json: { schema: { $ref: '#/components/schemas/customer_group_discount_detail' } } } }, responses: { 200: { description: 'Detail of customer_group_discount_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/customer_group_discount_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Customer Group Discount resource', tags: ['Customer Group Discount'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the customer_group_discount', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /listing-facet: { get: { summary: 'List with basic information of Listing Facet resources', tags: ['Listing Facet'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Listing Facet resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/listing_facet_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/listing-facet?page[limit]=25' }, last: { example: '/listing-facet?page[limit]=25&page[offset]=250' }, next: { example: '/listing-facet?page[limit]=25&page[offset]=75' }, prev: { example: '/listing-facet?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Listing Facet resources', tags: ['Listing Facet'], requestBody: { description: 'Create a new Listing Facet resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/listing_facet_detail' } } } }, responses: { 200: { description: 'Detail of listing_facet_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_facet_basic' } } }] } } } }, 400: { description: 'Detail of listing_facet_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_facet_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/listing-facet/{id}': { get: { summary: 'Detailed information about a Listing Facet resource', tags: ['Listing Facet'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the listing_facet', required: true }], responses: { 200: { description: 'Detail of listing_facet_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_facet_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Listing Facet resource', tags: ['Listing Facet'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the listing_facet', required: true }], requestBody: { description: 'Partially update information about a Listing Facet resource.', content: { application/json: { schema: { $ref: '#/components/schemas/listing_facet_detail' } } } }, responses: { 200: { description: 'Detail of listing_facet_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_facet_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Listing Facet resource', tags: ['Listing Facet'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the listing_facet', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /listing-sorting: { get: { summary: 'List with basic information of Listing Sorting resources', tags: ['Listing Sorting'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Listing Sorting resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/listing_sorting_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/listing-sorting?page[limit]=25' }, last: { example: '/listing-sorting?page[limit]=25&page[offset]=250' }, next: { example: '/listing-sorting?page[limit]=25&page[offset]=75' }, prev: { example: '/listing-sorting?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Listing Sorting resources', tags: ['Listing Sorting'], requestBody: { description: 'Create a new Listing Sorting resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/listing_sorting_detail' } } } }, responses: { 200: { description: 'Detail of listing_sorting_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_sorting_basic' } } }] } } } }, 400: { description: 'Detail of listing_sorting_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_sorting_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/listing-sorting/{id}': { get: { summary: 'Detailed information about a Listing Sorting resource', tags: ['Listing Sorting'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the listing_sorting', required: true }], responses: { 200: { description: 'Detail of listing_sorting_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_sorting_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Listing Sorting resource', tags: ['Listing Sorting'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the listing_sorting', required: true }], requestBody: { description: 'Partially update information about a Listing Sorting resource.', content: { application/json: { schema: { $ref: '#/components/schemas/listing_sorting_detail' } } } }, responses: { 200: { description: 'Detail of listing_sorting_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/listing_sorting_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Listing Sorting resource', tags: ['Listing Sorting'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the listing_sorting', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /locale: { get: { summary: 'List with basic information of Locale resources', tags: [Locale], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Locale resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/locale_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/locale?page[limit]=25' }, last: { example: '/locale?page[limit]=25&page[offset]=250' }, next: { example: '/locale?page[limit]=25&page[offset]=75' }, prev: { example: '/locale?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Locale resources', tags: [Locale], requestBody: { description: 'Create a new Locale resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/locale_detail' } } } }, responses: { 200: { description: 'Detail of locale_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/locale_basic' } } }] } } } }, 400: { description: 'Detail of locale_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/locale_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/locale/{id}': { get: { summary: 'Detailed information about a Locale resource', tags: [Locale], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the locale', required: true }], responses: { 200: { description: 'Detail of locale_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/locale_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Locale resource', tags: [Locale], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the locale', required: true }], requestBody: { description: 'Partially update information about a Locale resource.', content: { application/json: { schema: { $ref: '#/components/schemas/locale_detail' } } } }, responses: { 200: { description: 'Detail of locale_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/locale_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Locale resource', tags: [Locale], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the locale', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /log: { get: { summary: 'List with basic information of Log resources', tags: [Log], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Log resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/log_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/log?page[limit]=25' }, last: { example: '/log?page[limit]=25&page[offset]=250' }, next: { example: '/log?page[limit]=25&page[offset]=75' }, prev: { example: '/log?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Log resources', tags: [Log], requestBody: { description: 'Create a new Log resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/log_detail' } } } }, responses: { 200: { description: 'Detail of log_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/log_basic' } } }] } } } }, 400: { description: 'Detail of log_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/log_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/log/{id}': { get: { summary: 'Detailed information about a Log resource', tags: [Log], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the log', required: true }], responses: { 200: { description: 'Detail of log_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/log_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Log resource', tags: [Log], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the log', required: true }], requestBody: { description: 'Partially update information about a Log resource.', content: { application/json: { schema: { $ref: '#/components/schemas/log_detail' } } } }, responses: { 200: { description: 'Detail of log_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/log_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Log resource', tags: [Log], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the log', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /mail: { get: { summary: 'List with basic information of Mail resources', tags: [Mail], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Mail resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/mail_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/mail?page[limit]=25' }, last: { example: '/mail?page[limit]=25&page[offset]=250' }, next: { example: '/mail?page[limit]=25&page[offset]=75' }, prev: { example: '/mail?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Mail resources', tags: [Mail], requestBody: { description: 'Create a new Mail resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/mail_detail' } } } }, responses: { 200: { description: 'Detail of mail_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_basic' } } }] } } } }, 400: { description: 'Detail of mail_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/mail/{id}': { get: { summary: 'Detailed information about a Mail resource', tags: [Mail], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the mail', required: true }], responses: { 200: { description: 'Detail of mail_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Mail resource', tags: [Mail], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the mail', required: true }], requestBody: { description: 'Partially update information about a Mail resource.', content: { application/json: { schema: { $ref: '#/components/schemas/mail_detail' } } } }, responses: { 200: { description: 'Detail of mail_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Mail resource', tags: [Mail], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the mail', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /mail-attachment: { get: { summary: 'List with basic information of Mail Attachment resources', tags: ['Mail Attachment'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Mail Attachment resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/mail_attachment_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/mail-attachment?page[limit]=25' }, last: { example: '/mail-attachment?page[limit]=25&page[offset]=250' }, next: { example: '/mail-attachment?page[limit]=25&page[offset]=75' }, prev: { example: '/mail-attachment?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Mail Attachment resources', tags: ['Mail Attachment'], requestBody: { description: 'Create a new Mail Attachment resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/mail_attachment_detail' } } } }, responses: { 200: { description: 'Detail of mail_attachment_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_attachment_basic' } } }] } } } }, 400: { description: 'Detail of mail_attachment_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_attachment_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/mail-attachment/{id}': { get: { summary: 'Detailed information about a Mail Attachment resource', tags: ['Mail Attachment'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the mail_attachment', required: true }], responses: { 200: { description: 'Detail of mail_attachment_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_attachment_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Mail Attachment resource', tags: ['Mail Attachment'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the mail_attachment', required: true }], requestBody: { description: 'Partially update information about a Mail Attachment resource.', content: { application/json: { schema: { $ref: '#/components/schemas/mail_attachment_detail' } } } }, responses: { 200: { description: 'Detail of mail_attachment_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/mail_attachment_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Mail Attachment resource', tags: ['Mail Attachment'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the mail_attachment', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /media: { get: { summary: 'List with basic information of Media resources', tags: [Media], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Media resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/media_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/media?page[limit]=25' }, last: { example: '/media?page[limit]=25&page[offset]=250' }, next: { example: '/media?page[limit]=25&page[offset]=75' }, prev: { example: '/media?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Media resources', tags: [Media], requestBody: { description: 'Create a new Media resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/media_detail' } } } }, responses: { 200: { description: 'Detail of media_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_basic' } } }] } } } }, 400: { description: 'Detail of media_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/media/{id}': { get: { summary: 'Detailed information about a Media resource', tags: [Media], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the media', required: true }], responses: { 200: { description: 'Detail of media_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Media resource', tags: [Media], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the media', required: true }], requestBody: { description: 'Partially update information about a Media resource.', content: { application/json: { schema: { $ref: '#/components/schemas/media_detail' } } } }, responses: { 200: { description: 'Detail of media_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Media resource', tags: [Media], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the media', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /media-album: { get: { summary: 'List with basic information of Media Album resources', tags: ['Media Album'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Media Album resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/media_album_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/media-album?page[limit]=25' }, last: { example: '/media-album?page[limit]=25&page[offset]=250' }, next: { example: '/media-album?page[limit]=25&page[offset]=75' }, prev: { example: '/media-album?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Media Album resources', tags: ['Media Album'], requestBody: { description: 'Create a new Media Album resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/media_album_detail' } } } }, responses: { 200: { description: 'Detail of media_album_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_album_basic' } } }] } } } }, 400: { description: 'Detail of media_album_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_album_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/media-album/{id}': { get: { summary: 'Detailed information about a Media Album resource', tags: ['Media Album'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the media_album', required: true }], responses: { 200: { description: 'Detail of media_album_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_album_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Media Album resource', tags: ['Media Album'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the media_album', required: true }], requestBody: { description: 'Partially update information about a Media Album resource.', content: { application/json: { schema: { $ref: '#/components/schemas/media_album_detail' } } } }, responses: { 200: { description: 'Detail of media_album_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/media_album_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Media Album resource', tags: ['Media Album'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the media_album', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /order: { get: { summary: 'List with basic information of Order resources', tags: [Order], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Order resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/order_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/order?page[limit]=25' }, last: { example: '/order?page[limit]=25&page[offset]=250' }, next: { example: '/order?page[limit]=25&page[offset]=75' }, prev: { example: '/order?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Order resources', tags: [Order], requestBody: { description: 'Create a new Order resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/order_detail' } } } }, responses: { 200: { description: 'Detail of order_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_basic' } } }] } } } }, 400: { description: 'Detail of order_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/order/{id}': { get: { summary: 'Detailed information about a Order resource', tags: [Order], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order', required: true }], responses: { 200: { description: 'Detail of order_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Order resource', tags: [Order], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order', required: true }], requestBody: { description: 'Partially update information about a Order resource.', content: { application/json: { schema: { $ref: '#/components/schemas/order_detail' } } } }, responses: { 200: { description: 'Detail of order_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Order resource', tags: [Order], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /order-address: { get: { summary: 'List with basic information of Order Address resources', tags: ['Order Address'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Order Address resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/order_address_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/order-address?page[limit]=25' }, last: { example: '/order-address?page[limit]=25&page[offset]=250' }, next: { example: '/order-address?page[limit]=25&page[offset]=75' }, prev: { example: '/order-address?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Order Address resources', tags: ['Order Address'], requestBody: { description: 'Create a new Order Address resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/order_address_detail' } } } }, responses: { 200: { description: 'Detail of order_address_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_address_basic' } } }] } } } }, 400: { description: 'Detail of order_address_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_address_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/order-address/{id}': { get: { summary: 'Detailed information about a Order Address resource', tags: ['Order Address'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_address', required: true }], responses: { 200: { description: 'Detail of order_address_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_address_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Order Address resource', tags: ['Order Address'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_address', required: true }], requestBody: { description: 'Partially update information about a Order Address resource.', content: { application/json: { schema: { $ref: '#/components/schemas/order_address_detail' } } } }, responses: { 200: { description: 'Detail of order_address_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_address_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Order Address resource', tags: ['Order Address'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_address', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /order-delivery: { get: { summary: 'List with basic information of Order Delivery resources', tags: ['Order Delivery'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Order Delivery resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/order_delivery_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/order-delivery?page[limit]=25' }, last: { example: '/order-delivery?page[limit]=25&page[offset]=250' }, next: { example: '/order-delivery?page[limit]=25&page[offset]=75' }, prev: { example: '/order-delivery?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Order Delivery resources', tags: ['Order Delivery'], requestBody: { description: 'Create a new Order Delivery resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/order_delivery_detail' } } } }, responses: { 200: { description: 'Detail of order_delivery_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_basic' } } }] } } } }, 400: { description: 'Detail of order_delivery_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/order-delivery/{id}': { get: { summary: 'Detailed information about a Order Delivery resource', tags: ['Order Delivery'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_delivery', required: true }], responses: { 200: { description: 'Detail of order_delivery_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Order Delivery resource', tags: ['Order Delivery'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_delivery', required: true }], requestBody: { description: 'Partially update information about a Order Delivery resource.', content: { application/json: { schema: { $ref: '#/components/schemas/order_delivery_detail' } } } }, responses: { 200: { description: 'Detail of order_delivery_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Order Delivery resource', tags: ['Order Delivery'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_delivery', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /order-delivery-position: { get: { summary: 'List with basic information of Order Delivery Position resources', tags: ['Order Delivery Position'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Order Delivery Position resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/order_delivery_position_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/order-delivery-position?page[limit]=25' }, last: { example: '/order-delivery-position?page[limit]=25&page[offset]=250' }, next: { example: '/order-delivery-position?page[limit]=25&page[offset]=75' }, prev: { example: '/order-delivery-position?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Order Delivery Position resources', tags: ['Order Delivery Position'], requestBody: { description: 'Create a new Order Delivery Position resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/order_delivery_position_detail' } } } }, responses: { 200: { description: 'Detail of order_delivery_position_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_position_basic' } } }] } } } }, 400: { description: 'Detail of order_delivery_position_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_position_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/order-delivery-position/{id}': { get: { summary: 'Detailed information about a Order Delivery Position resource', tags: ['Order Delivery Position'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_delivery_position', required: true }], responses: { 200: { description: 'Detail of order_delivery_position_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_position_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Order Delivery Position resource', tags: ['Order Delivery Position'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_delivery_position', required: true }], requestBody: { description: 'Partially update information about a Order Delivery Position resource.', content: { application/json: { schema: { $ref: '#/components/schemas/order_delivery_position_detail' } } } }, responses: { 200: { description: 'Detail of order_delivery_position_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_delivery_position_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Order Delivery Position resource', tags: ['Order Delivery Position'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_delivery_position', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /order-line-item: { get: { summary: 'List with basic information of Order Line Item resources', tags: ['Order Line Item'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Order Line Item resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/order_line_item_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/order-line-item?page[limit]=25' }, last: { example: '/order-line-item?page[limit]=25&page[offset]=250' }, next: { example: '/order-line-item?page[limit]=25&page[offset]=75' }, prev: { example: '/order-line-item?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Order Line Item resources', tags: ['Order Line Item'], requestBody: { description: 'Create a new Order Line Item resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/order_line_item_detail' } } } }, responses: { 200: { description: 'Detail of order_line_item_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_line_item_basic' } } }] } } } }, 400: { description: 'Detail of order_line_item_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_line_item_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/order-line-item/{id}': { get: { summary: 'Detailed information about a Order Line Item resource', tags: ['Order Line Item'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_line_item', required: true }], responses: { 200: { description: 'Detail of order_line_item_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_line_item_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Order Line Item resource', tags: ['Order Line Item'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_line_item', required: true }], requestBody: { description: 'Partially update information about a Order Line Item resource.', content: { application/json: { schema: { $ref: '#/components/schemas/order_line_item_detail' } } } }, responses: { 200: { description: 'Detail of order_line_item_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_line_item_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Order Line Item resource', tags: ['Order Line Item'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_line_item', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /order-state: { get: { summary: 'List with basic information of Order State resources', tags: ['Order State'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Order State resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/order_state_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/order-state?page[limit]=25' }, last: { example: '/order-state?page[limit]=25&page[offset]=250' }, next: { example: '/order-state?page[limit]=25&page[offset]=75' }, prev: { example: '/order-state?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Order State resources', tags: ['Order State'], requestBody: { description: 'Create a new Order State resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/order_state_detail' } } } }, responses: { 200: { description: 'Detail of order_state_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_state_basic' } } }] } } } }, 400: { description: 'Detail of order_state_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_state_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/order-state/{id}': { get: { summary: 'Detailed information about a Order State resource', tags: ['Order State'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_state', required: true }], responses: { 200: { description: 'Detail of order_state_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_state_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Order State resource', tags: ['Order State'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_state', required: true }], requestBody: { description: 'Partially update information about a Order State resource.', content: { application/json: { schema: { $ref: '#/components/schemas/order_state_detail' } } } }, responses: { 200: { description: 'Detail of order_state_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/order_state_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Order State resource', tags: ['Order State'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the order_state', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /payment-method: { get: { summary: 'List with basic information of Payment Method resources', tags: ['Payment Method'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Payment Method resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/payment_method_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/payment-method?page[limit]=25' }, last: { example: '/payment-method?page[limit]=25&page[offset]=250' }, next: { example: '/payment-method?page[limit]=25&page[offset]=75' }, prev: { example: '/payment-method?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Payment Method resources', tags: ['Payment Method'], requestBody: { description: 'Create a new Payment Method resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/payment_method_detail' } } } }, responses: { 200: { description: 'Detail of payment_method_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/payment_method_basic' } } }] } } } }, 400: { description: 'Detail of payment_method_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/payment_method_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/payment-method/{id}': { get: { summary: 'Detailed information about a Payment Method resource', tags: ['Payment Method'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the payment_method', required: true }], responses: { 200: { description: 'Detail of payment_method_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/payment_method_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Payment Method resource', tags: ['Payment Method'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the payment_method', required: true }], requestBody: { description: 'Partially update information about a Payment Method resource.', content: { application/json: { schema: { $ref: '#/components/schemas/payment_method_detail' } } } }, responses: { 200: { description: 'Detail of payment_method_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/payment_method_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Payment Method resource', tags: ['Payment Method'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the payment_method', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /plugin: { get: { summary: 'List with basic information of Plugin resources', tags: [Plugin], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Plugin resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/plugin_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/plugin?page[limit]=25' }, last: { example: '/plugin?page[limit]=25&page[offset]=250' }, next: { example: '/plugin?page[limit]=25&page[offset]=75' }, prev: { example: '/plugin?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Plugin resources', tags: [Plugin], requestBody: { description: 'Create a new Plugin resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/plugin_detail' } } } }, responses: { 200: { description: 'Detail of plugin_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/plugin_basic' } } }] } } } }, 400: { description: 'Detail of plugin_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/plugin_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/plugin/{id}': { get: { summary: 'Detailed information about a Plugin resource', tags: [Plugin], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the plugin', required: true }], responses: { 200: { description: 'Detail of plugin_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/plugin_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Plugin resource', tags: [Plugin], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the plugin', required: true }], requestBody: { description: 'Partially update information about a Plugin resource.', content: { application/json: { schema: { $ref: '#/components/schemas/plugin_detail' } } } }, responses: { 200: { description: 'Detail of plugin_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/plugin_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Plugin resource', tags: [Plugin], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the plugin', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /product: { get: { summary: 'List with basic information of Product resources', tags: [Product], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Product resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/product_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/product?page[limit]=25' }, last: { example: '/product?page[limit]=25&page[offset]=250' }, next: { example: '/product?page[limit]=25&page[offset]=75' }, prev: { example: '/product?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Product resources', tags: [Product], requestBody: { description: 'Create a new Product resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/product_detail' } } } }, responses: { 200: { description: 'Detail of product_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_basic' } } }] } } } }, 400: { description: 'Detail of product_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/product/{id}': { get: { summary: 'Detailed information about a Product resource', tags: [Product], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product', required: true }], responses: { 200: { description: 'Detail of product_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Product resource', tags: [Product], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product', required: true }], requestBody: { description: 'Partially update information about a Product resource.', content: { application/json: { schema: { $ref: '#/components/schemas/product_detail' } } } }, responses: { 200: { description: 'Detail of product_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Product resource', tags: [Product], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /product-listing-price: { get: { summary: 'List with basic information of Product Listing Price resources', tags: ['Product Listing Price'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Product Listing Price resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/product_listing_price_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/product-listing-price?page[limit]=25' }, last: { example: '/product-listing-price?page[limit]=25&page[offset]=250' }, next: { example: '/product-listing-price?page[limit]=25&page[offset]=75' }, prev: { example: '/product-listing-price?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Product Listing Price resources', tags: ['Product Listing Price'], requestBody: { description: 'Create a new Product Listing Price resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/product_listing_price_detail' } } } }, responses: { 200: { description: 'Detail of product_listing_price_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_listing_price_basic' } } }] } } } }, 400: { description: 'Detail of product_listing_price_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_listing_price_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/product-listing-price/{id}': { get: { summary: 'Detailed information about a Product Listing Price resource', tags: ['Product Listing Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_listing_price', required: true }], responses: { 200: { description: 'Detail of product_listing_price_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_listing_price_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Product Listing Price resource', tags: ['Product Listing Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_listing_price', required: true }], requestBody: { description: 'Partially update information about a Product Listing Price resource.', content: { application/json: { schema: { $ref: '#/components/schemas/product_listing_price_detail' } } } }, responses: { 200: { description: 'Detail of product_listing_price_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_listing_price_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Product Listing Price resource', tags: ['Product Listing Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_listing_price', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /product-manufacturer: { get: { summary: 'List with basic information of Product Manufacturer resources', tags: ['Product Manufacturer'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Product Manufacturer resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/product_manufacturer_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/product-manufacturer?page[limit]=25' }, last: { example: '/product-manufacturer?page[limit]=25&page[offset]=250' }, next: { example: '/product-manufacturer?page[limit]=25&page[offset]=75' }, prev: { example: '/product-manufacturer?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Product Manufacturer resources', tags: ['Product Manufacturer'], requestBody: { description: 'Create a new Product Manufacturer resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/product_manufacturer_detail' } } } }, responses: { 200: { description: 'Detail of product_manufacturer_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_manufacturer_basic' } } }] } } } }, 400: { description: 'Detail of product_manufacturer_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_manufacturer_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/product-manufacturer/{id}': { get: { summary: 'Detailed information about a Product Manufacturer resource', tags: ['Product Manufacturer'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_manufacturer', required: true }], responses: { 200: { description: 'Detail of product_manufacturer_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_manufacturer_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Product Manufacturer resource', tags: ['Product Manufacturer'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_manufacturer', required: true }], requestBody: { description: 'Partially update information about a Product Manufacturer resource.', content: { application/json: { schema: { $ref: '#/components/schemas/product_manufacturer_detail' } } } }, responses: { 200: { description: 'Detail of product_manufacturer_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_manufacturer_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Product Manufacturer resource', tags: ['Product Manufacturer'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_manufacturer', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /product-media: { get: { summary: 'List with basic information of Product Media resources', tags: ['Product Media'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Product Media resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/product_media_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/product-media?page[limit]=25' }, last: { example: '/product-media?page[limit]=25&page[offset]=250' }, next: { example: '/product-media?page[limit]=25&page[offset]=75' }, prev: { example: '/product-media?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Product Media resources', tags: ['Product Media'], requestBody: { description: 'Create a new Product Media resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/product_media_detail' } } } }, responses: { 200: { description: 'Detail of product_media_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_media_basic' } } }] } } } }, 400: { description: 'Detail of product_media_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_media_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/product-media/{id}': { get: { summary: 'Detailed information about a Product Media resource', tags: ['Product Media'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_media', required: true }], responses: { 200: { description: 'Detail of product_media_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_media_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Product Media resource', tags: ['Product Media'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_media', required: true }], requestBody: { description: 'Partially update information about a Product Media resource.', content: { application/json: { schema: { $ref: '#/components/schemas/product_media_detail' } } } }, responses: { 200: { description: 'Detail of product_media_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_media_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Product Media resource', tags: ['Product Media'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_media', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /product-price: { get: { summary: 'List with basic information of Product Price resources', tags: ['Product Price'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Product Price resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/product_price_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/product-price?page[limit]=25' }, last: { example: '/product-price?page[limit]=25&page[offset]=250' }, next: { example: '/product-price?page[limit]=25&page[offset]=75' }, prev: { example: '/product-price?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Product Price resources', tags: ['Product Price'], requestBody: { description: 'Create a new Product Price resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/product_price_detail' } } } }, responses: { 200: { description: 'Detail of product_price_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_price_basic' } } }] } } } }, 400: { description: 'Detail of product_price_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_price_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/product-price/{id}': { get: { summary: 'Detailed information about a Product Price resource', tags: ['Product Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_price', required: true }], responses: { 200: { description: 'Detail of product_price_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_price_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Product Price resource', tags: ['Product Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_price', required: true }], requestBody: { description: 'Partially update information about a Product Price resource.', content: { application/json: { schema: { $ref: '#/components/schemas/product_price_detail' } } } }, responses: { 200: { description: 'Detail of product_price_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_price_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Product Price resource', tags: ['Product Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_price', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /product-search-keyword: { get: { summary: 'List with basic information of Product Search Keyword resources', tags: ['Product Search Keyword'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Product Search Keyword resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/product_search_keyword_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/product-search-keyword?page[limit]=25' }, last: { example: '/product-search-keyword?page[limit]=25&page[offset]=250' }, next: { example: '/product-search-keyword?page[limit]=25&page[offset]=75' }, prev: { example: '/product-search-keyword?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Product Search Keyword resources', tags: ['Product Search Keyword'], requestBody: { description: 'Create a new Product Search Keyword resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/product_search_keyword_detail' } } } }, responses: { 200: { description: 'Detail of product_search_keyword_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_search_keyword_basic' } } }] } } } }, 400: { description: 'Detail of product_search_keyword_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_search_keyword_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/product-search-keyword/{id}': { get: { summary: 'Detailed information about a Product Search Keyword resource', tags: ['Product Search Keyword'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_search_keyword', required: true }], responses: { 200: { description: 'Detail of product_search_keyword_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_search_keyword_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Product Search Keyword resource', tags: ['Product Search Keyword'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_search_keyword', required: true }], requestBody: { description: 'Partially update information about a Product Search Keyword resource.', content: { application/json: { schema: { $ref: '#/components/schemas/product_search_keyword_detail' } } } }, responses: { 200: { description: 'Detail of product_search_keyword_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_search_keyword_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Product Search Keyword resource', tags: ['Product Search Keyword'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_search_keyword', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /product-stream: { get: { summary: 'List with basic information of Product Stream resources', tags: ['Product Stream'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Product Stream resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/product_stream_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/product-stream?page[limit]=25' }, last: { example: '/product-stream?page[limit]=25&page[offset]=250' }, next: { example: '/product-stream?page[limit]=25&page[offset]=75' }, prev: { example: '/product-stream?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Product Stream resources', tags: ['Product Stream'], requestBody: { description: 'Create a new Product Stream resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/product_stream_detail' } } } }, responses: { 200: { description: 'Detail of product_stream_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_stream_basic' } } }] } } } }, 400: { description: 'Detail of product_stream_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_stream_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/product-stream/{id}': { get: { summary: 'Detailed information about a Product Stream resource', tags: ['Product Stream'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_stream', required: true }], responses: { 200: { description: 'Detail of product_stream_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_stream_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Product Stream resource', tags: ['Product Stream'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_stream', required: true }], requestBody: { description: 'Partially update information about a Product Stream resource.', content: { application/json: { schema: { $ref: '#/components/schemas/product_stream_detail' } } } }, responses: { 200: { description: 'Detail of product_stream_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/product_stream_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Product Stream resource', tags: ['Product Stream'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the product_stream', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /seo-url: { get: { summary: 'List with basic information of Seo Url resources', tags: ['Seo Url'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Seo Url resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/seo_url_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/seo-url?page[limit]=25' }, last: { example: '/seo-url?page[limit]=25&page[offset]=250' }, next: { example: '/seo-url?page[limit]=25&page[offset]=75' }, prev: { example: '/seo-url?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Seo Url resources', tags: ['Seo Url'], requestBody: { description: 'Create a new Seo Url resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/seo_url_detail' } } } }, responses: { 200: { description: 'Detail of seo_url_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/seo_url_basic' } } }] } } } }, 400: { description: 'Detail of seo_url_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/seo_url_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/seo-url/{id}': { get: { summary: 'Detailed information about a Seo Url resource', tags: ['Seo Url'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the seo_url', required: true }], responses: { 200: { description: 'Detail of seo_url_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/seo_url_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Seo Url resource', tags: ['Seo Url'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the seo_url', required: true }], requestBody: { description: 'Partially update information about a Seo Url resource.', content: { application/json: { schema: { $ref: '#/components/schemas/seo_url_detail' } } } }, responses: { 200: { description: 'Detail of seo_url_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/seo_url_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Seo Url resource', tags: ['Seo Url'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the seo_url', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shipping-method: { get: { summary: 'List with basic information of Shipping Method resources', tags: ['Shipping Method'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shipping Method resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shipping_method_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shipping-method?page[limit]=25' }, last: { example: '/shipping-method?page[limit]=25&page[offset]=250' }, next: { example: '/shipping-method?page[limit]=25&page[offset]=75' }, prev: { example: '/shipping-method?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shipping Method resources', tags: ['Shipping Method'], requestBody: { description: 'Create a new Shipping Method resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shipping_method_detail' } } } }, responses: { 200: { description: 'Detail of shipping_method_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_basic' } } }] } } } }, 400: { description: 'Detail of shipping_method_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shipping-method/{id}': { get: { summary: 'Detailed information about a Shipping Method resource', tags: ['Shipping Method'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shipping_method', required: true }], responses: { 200: { description: 'Detail of shipping_method_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shipping Method resource', tags: ['Shipping Method'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shipping_method', required: true }], requestBody: { description: 'Partially update information about a Shipping Method resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shipping_method_detail' } } } }, responses: { 200: { description: 'Detail of shipping_method_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shipping Method resource', tags: ['Shipping Method'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shipping_method', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shipping-method-price: { get: { summary: 'List with basic information of Shipping Method Price resources', tags: ['Shipping Method Price'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shipping Method Price resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shipping_method_price_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shipping-method-price?page[limit]=25' }, last: { example: '/shipping-method-price?page[limit]=25&page[offset]=250' }, next: { example: '/shipping-method-price?page[limit]=25&page[offset]=75' }, prev: { example: '/shipping-method-price?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shipping Method Price resources', tags: ['Shipping Method Price'], requestBody: { description: 'Create a new Shipping Method Price resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shipping_method_price_detail' } } } }, responses: { 200: { description: 'Detail of shipping_method_price_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_price_basic' } } }] } } } }, 400: { description: 'Detail of shipping_method_price_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_price_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shipping-method-price/{id}': { get: { summary: 'Detailed information about a Shipping Method Price resource', tags: ['Shipping Method Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shipping_method_price', required: true }], responses: { 200: { description: 'Detail of shipping_method_price_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_price_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shipping Method Price resource', tags: ['Shipping Method Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shipping_method_price', required: true }], requestBody: { description: 'Partially update information about a Shipping Method Price resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shipping_method_price_detail' } } } }, responses: { 200: { description: 'Detail of shipping_method_price_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shipping_method_price_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shipping Method Price resource', tags: ['Shipping Method Price'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shipping_method_price', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shop: { get: { summary: 'List with basic information of Shop resources', tags: [Shop], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shop resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shop_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shop?page[limit]=25' }, last: { example: '/shop?page[limit]=25&page[offset]=250' }, next: { example: '/shop?page[limit]=25&page[offset]=75' }, prev: { example: '/shop?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shop resources', tags: [Shop], requestBody: { description: 'Create a new Shop resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_detail' } } } }, responses: { 200: { description: 'Detail of shop_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_basic' } } }] } } } }, 400: { description: 'Detail of shop_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shop/{id}': { get: { summary: 'Detailed information about a Shop resource', tags: [Shop], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop', required: true }], responses: { 200: { description: 'Detail of shop_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shop resource', tags: [Shop], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop', required: true }], requestBody: { description: 'Partially update information about a Shop resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_detail' } } } }, responses: { 200: { description: 'Detail of shop_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shop resource', tags: [Shop], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shop-template: { get: { summary: 'List with basic information of Shop Template resources', tags: ['Shop Template'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shop Template resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shop_template_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shop-template?page[limit]=25' }, last: { example: '/shop-template?page[limit]=25&page[offset]=250' }, next: { example: '/shop-template?page[limit]=25&page[offset]=75' }, prev: { example: '/shop-template?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shop Template resources', tags: ['Shop Template'], requestBody: { description: 'Create a new Shop Template resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_basic' } } }] } } } }, 400: { description: 'Detail of shop_template_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shop-template/{id}': { get: { summary: 'Detailed information about a Shop Template resource', tags: ['Shop Template'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template', required: true }], responses: { 200: { description: 'Detail of shop_template_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shop Template resource', tags: ['Shop Template'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template', required: true }], requestBody: { description: 'Partially update information about a Shop Template resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shop Template resource', tags: ['Shop Template'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shop-template-config-form: { get: { summary: 'List with basic information of Shop Template Config Form resources', tags: ['Shop Template Config Form'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shop Template Config Form resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shop_template_config_form_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shop-template-config-form?page[limit]=25' }, last: { example: '/shop-template-config-form?page[limit]=25&page[offset]=250' }, next: { example: '/shop-template-config-form?page[limit]=25&page[offset]=75' }, prev: { example: '/shop-template-config-form?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shop Template Config Form resources', tags: ['Shop Template Config Form'], requestBody: { description: 'Create a new Shop Template Config Form resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_form_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_form_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_basic' } } }] } } } }, 400: { description: 'Detail of shop_template_config_form_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shop-template-config-form/{id}': { get: { summary: 'Detailed information about a Shop Template Config Form resource', tags: ['Shop Template Config Form'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form', required: true }], responses: { 200: { description: 'Detail of shop_template_config_form_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shop Template Config Form resource', tags: ['Shop Template Config Form'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form', required: true }], requestBody: { description: 'Partially update information about a Shop Template Config Form resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_form_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_form_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shop Template Config Form resource', tags: ['Shop Template Config Form'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shop-template-config-form-field: { get: { summary: 'List with basic information of Shop Template Config Form Field resources', tags: ['Shop Template Config Form Field'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shop Template Config Form Field resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shop_template_config_form_field_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shop-template-config-form-field?page[limit]=25' }, last: { example: '/shop-template-config-form-field?page[limit]=25&page[offset]=250' }, next: { example: '/shop-template-config-form-field?page[limit]=25&page[offset]=75' }, prev: { example: '/shop-template-config-form-field?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shop Template Config Form Field resources', tags: ['Shop Template Config Form Field'], requestBody: { description: 'Create a new Shop Template Config Form Field resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_form_field_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_form_field_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_basic' } } }] } } } }, 400: { description: 'Detail of shop_template_config_form_field_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shop-template-config-form-field/{id}': { get: { summary: 'Detailed information about a Shop Template Config Form Field resource', tags: ['Shop Template Config Form Field'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form_field', required: true }], responses: { 200: { description: 'Detail of shop_template_config_form_field_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shop Template Config Form Field resource', tags: ['Shop Template Config Form Field'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form_field', required: true }], requestBody: { description: 'Partially update information about a Shop Template Config Form Field resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_form_field_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_form_field_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shop Template Config Form Field resource', tags: ['Shop Template Config Form Field'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form_field', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shop-template-config-form-field-value: { get: { summary: 'List with basic information of Shop Template Config Form Field Value resources', tags: ['Shop Template Config Form Field Value'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shop Template Config Form Field Value resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shop_template_config_form_field_value_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shop-template-config-form-field-value?page[limit]=25' }, last: { example: '/shop-template-config-form-field-value?page[limit]=25&page[offset]=250' }, next: { example: '/shop-template-config-form-field-value?page[limit]=25&page[offset]=75' }, prev: { example: '/shop-template-config-form-field-value?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shop Template Config Form Field Value resources', tags: ['Shop Template Config Form Field Value'], requestBody: { description: 'Create a new Shop Template Config Form Field Value resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_form_field_value_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_form_field_value_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_value_basic' } } }] } } } }, 400: { description: 'Detail of shop_template_config_form_field_value_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_value_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shop-template-config-form-field-value/{id}': { get: { summary: 'Detailed information about a Shop Template Config Form Field Value resource', tags: ['Shop Template Config Form Field Value'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form_field_value', required: true }], responses: { 200: { description: 'Detail of shop_template_config_form_field_value_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_value_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shop Template Config Form Field Value resource', tags: ['Shop Template Config Form Field Value'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form_field_value', required: true }], requestBody: { description: 'Partially update information about a Shop Template Config Form Field Value resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_form_field_value_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_form_field_value_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_form_field_value_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shop Template Config Form Field Value resource', tags: ['Shop Template Config Form Field Value'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_form_field_value', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /shop-template-config-preset: { get: { summary: 'List with basic information of Shop Template Config Preset resources', tags: ['Shop Template Config Preset'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Shop Template Config Preset resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/shop_template_config_preset_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/shop-template-config-preset?page[limit]=25' }, last: { example: '/shop-template-config-preset?page[limit]=25&page[offset]=250' }, next: { example: '/shop-template-config-preset?page[limit]=25&page[offset]=75' }, prev: { example: '/shop-template-config-preset?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Shop Template Config Preset resources', tags: ['Shop Template Config Preset'], requestBody: { description: 'Create a new Shop Template Config Preset resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_preset_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_preset_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_preset_basic' } } }] } } } }, 400: { description: 'Detail of shop_template_config_preset_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_preset_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/shop-template-config-preset/{id}': { get: { summary: 'Detailed information about a Shop Template Config Preset resource', tags: ['Shop Template Config Preset'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_preset', required: true }], responses: { 200: { description: 'Detail of shop_template_config_preset_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_preset_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Shop Template Config Preset resource', tags: ['Shop Template Config Preset'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_preset', required: true }], requestBody: { description: 'Partially update information about a Shop Template Config Preset resource.', content: { application/json: { schema: { $ref: '#/components/schemas/shop_template_config_preset_detail' } } } }, responses: { 200: { description: 'Detail of shop_template_config_preset_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/shop_template_config_preset_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Shop Template Config Preset resource', tags: ['Shop Template Config Preset'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the shop_template_config_preset', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /snippet: { get: { summary: 'List with basic information of Snippet resources', tags: [Snippet], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Snippet resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/snippet_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/snippet?page[limit]=25' }, last: { example: '/snippet?page[limit]=25&page[offset]=250' }, next: { example: '/snippet?page[limit]=25&page[offset]=75' }, prev: { example: '/snippet?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Snippet resources', tags: [Snippet], requestBody: { description: 'Create a new Snippet resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/snippet_detail' } } } }, responses: { 200: { description: 'Detail of snippet_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/snippet_basic' } } }] } } } }, 400: { description: 'Detail of snippet_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/snippet_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/snippet/{id}': { get: { summary: 'Detailed information about a Snippet resource', tags: [Snippet], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the snippet', required: true }], responses: { 200: { description: 'Detail of snippet_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/snippet_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Snippet resource', tags: [Snippet], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the snippet', required: true }], requestBody: { description: 'Partially update information about a Snippet resource.', content: { application/json: { schema: { $ref: '#/components/schemas/snippet_detail' } } } }, responses: { 200: { description: 'Detail of snippet_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/snippet_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Snippet resource', tags: [Snippet], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the snippet', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /tax: { get: { summary: 'List with basic information of Tax resources', tags: [Tax], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Tax resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/tax_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/tax?page[limit]=25' }, last: { example: '/tax?page[limit]=25&page[offset]=250' }, next: { example: '/tax?page[limit]=25&page[offset]=75' }, prev: { example: '/tax?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Tax resources', tags: [Tax], requestBody: { description: 'Create a new Tax resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/tax_detail' } } } }, responses: { 200: { description: 'Detail of tax_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_basic' } } }] } } } }, 400: { description: 'Detail of tax_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/tax/{id}': { get: { summary: 'Detailed information about a Tax resource', tags: [Tax], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the tax', required: true }], responses: { 200: { description: 'Detail of tax_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Tax resource', tags: [Tax], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the tax', required: true }], requestBody: { description: 'Partially update information about a Tax resource.', content: { application/json: { schema: { $ref: '#/components/schemas/tax_detail' } } } }, responses: { 200: { description: 'Detail of tax_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Tax resource', tags: [Tax], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the tax', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /tax-area-rule: { get: { summary: 'List with basic information of Tax Area Rule resources', tags: ['Tax Area Rule'], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Tax Area Rule resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/tax_area_rule_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/tax-area-rule?page[limit]=25' }, last: { example: '/tax-area-rule?page[limit]=25&page[offset]=250' }, next: { example: '/tax-area-rule?page[limit]=25&page[offset]=75' }, prev: { example: '/tax-area-rule?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Tax Area Rule resources', tags: ['Tax Area Rule'], requestBody: { description: 'Create a new Tax Area Rule resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/tax_area_rule_detail' } } } }, responses: { 200: { description: 'Detail of tax_area_rule_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_area_rule_basic' } } }] } } } }, 400: { description: 'Detail of tax_area_rule_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_area_rule_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/tax-area-rule/{id}': { get: { summary: 'Detailed information about a Tax Area Rule resource', tags: ['Tax Area Rule'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the tax_area_rule', required: true }], responses: { 200: { description: 'Detail of tax_area_rule_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_area_rule_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Tax Area Rule resource', tags: ['Tax Area Rule'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the tax_area_rule', required: true }], requestBody: { description: 'Partially update information about a Tax Area Rule resource.', content: { application/json: { schema: { $ref: '#/components/schemas/tax_area_rule_detail' } } } }, responses: { 200: { description: 'Detail of tax_area_rule_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/tax_area_rule_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Tax Area Rule resource', tags: ['Tax Area Rule'], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the tax_area_rule', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /unit: { get: { summary: 'List with basic information of Unit resources', tags: [Unit], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of Unit resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/unit_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/unit?page[limit]=25' }, last: { example: '/unit?page[limit]=25&page[offset]=250' }, next: { example: '/unit?page[limit]=25&page[offset]=75' }, prev: { example: '/unit?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new Unit resources', tags: [Unit], requestBody: { description: 'Create a new Unit resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/unit_detail' } } } }, responses: { 200: { description: 'Detail of unit_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/unit_basic' } } }] } } } }, 400: { description: 'Detail of unit_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/unit_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/unit/{id}': { get: { summary: 'Detailed information about a Unit resource', tags: [Unit], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the unit', required: true }], responses: { 200: { description: 'Detail of unit_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/unit_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a Unit resource', tags: [Unit], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the unit', required: true }], requestBody: { description: 'Partially update information about a Unit resource.', content: { application/json: { schema: { $ref: '#/components/schemas/unit_detail' } } } }, responses: { 200: { description: 'Detail of unit_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/unit_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a Unit resource', tags: [Unit], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the unit', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
    /user: { get: { summary: 'List with basic information of User resources', tags: [User], parameters: [{ name: 'page[limit]', in: query, schema: { type: integer }, description: 'Max amount of resources to be returned' }, { name: 'page[offset]', in: query, schema: { type: integer }, description: 'Offset of the searched results' }, { name: query, in: query, schema: { type: string }, description: 'Encoded SwagQL in JSON' }], responses: { 200: { description: 'List of User resources.', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/data' }, { type: array, items: { $ref: '#/components/schemas/user_basic' } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/pagination' }, { type: object, properties: { first: { example: '/user?page[limit]=25' }, last: { example: '/user?page[limit]=25&page[offset]=250' }, next: { example: '/user?page[limit]=25&page[offset]=75' }, prev: { example: '/user?page[limit]=25&page[offset]=25' } } }] } } }] } } } }, 401: { $ref: '#/components/responses/401' } } }, post: { summary: 'Create a new User resources', tags: [User], requestBody: { description: 'Create a new User resources. All required fields must be provided in order to create a new resource successfully.', content: { application/json: { schema: { $ref: '#/components/schemas/user_detail' } } } }, responses: { 200: { description: 'Detail of user_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/user_basic' } } }] } } } }, 400: { description: 'Detail of user_basic', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/user_basic' } } }] } } } }, 401: { $ref: '#/components/responses/401' } } } }
    '/user/{id}': { get: { summary: 'Detailed information about a User resource', tags: [User], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the user', required: true }], responses: { 200: { description: 'Detail of user_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/user_detail' } } }] } } } }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, patch: { summary: 'Partially update information about a User resource', tags: [User], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the user', required: true }], requestBody: { description: 'Partially update information about a User resource.', content: { application/json: { schema: { $ref: '#/components/schemas/user_detail' } } } }, responses: { 200: { description: 'Detail of user_detail', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/success' }, { type: object, properties: { data: { $ref: '#/components/schemas/user_detail' } } }] } } } }, 400: { $ref: '#/components/responses/400' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } }, delete: { summary: 'Delete a User resource', tags: [User], parameters: [{ name: id, in: path, schema: { type: string }, description: 'Identifier for the user', required: true }], responses: { 204: { $ref: '#/components/responses/204' }, 404: { $ref: '#/components/responses/404' }, 401: { $ref: '#/components/responses/401' } } } }
components:
    schemas: { auth: { type: object, properties: { username: { type: string, example: admin, description: 'Username for authentication.' }, password: { type: string, example: shopware, description: 'Password for authentication.' } } }, category_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: category }, id: { example: 6404dd61-b4c7-44b8-9d2d-a7c683d69d37 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { parentId: { type: string }, mediaId: { type: string }, productStreamId: { type: string }, name: { type: string }, path: { type: string }, position: { type: integer }, level: { type: integer }, template: { type: string }, active: { type: boolean }, isBlog: { type: boolean }, external: { type: string }, hideFilter: { type: boolean }, hideTop: { type: boolean }, productBoxLayout: { type: string }, hideSortings: { type: boolean }, sortingIds: { type: string }, facetIds: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, pathNames: { type: string }, metaKeywords: { type: string }, metaTitle: { type: string }, metaDescription: { type: string }, cmsHeadline: { type: string }, cmsDescription: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /category/6404dd61-b4c7-44b8-9d2d-a7c683d69d37 } } }] }, relationships: { properties: { media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/6404dd61-b4c7-44b8-9d2d-a7c683d69d37/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: e7eadcff-0b68-4fc1-a72d-813d76391e6a } } }] } } }] }, productStream: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/6404dd61-b4c7-44b8-9d2d-a7c683d69d37/productStream } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_stream }, id: { type: string, example: b4ca4994-b7eb-419f-9824-e95e86dee4f6 } } }] } } }] }, canonicalUrl: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/6404dd61-b4c7-44b8-9d2d-a7c683d69d37/canonicalUrl } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: seo_url }, id: { type: string, example: 33abf1db-5fdd-4439-8ba6-d429844e0b94 } } }] } } }] } } } } }] }, category_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: category }, id: { example: 69415529-a25d-4e48-8862-03bd71dd1a48 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { parentId: { type: string }, mediaId: { type: string }, productStreamId: { type: string }, name: { type: string }, path: { type: string }, position: { type: integer }, level: { type: integer }, template: { type: string }, active: { type: boolean }, isBlog: { type: boolean }, external: { type: string }, hideFilter: { type: boolean }, hideTop: { type: boolean }, productBoxLayout: { type: string }, hideSortings: { type: boolean }, sortingIds: { type: string }, facetIds: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, pathNames: { type: string }, metaKeywords: { type: string }, metaTitle: { type: string }, metaDescription: { type: string }, cmsHeadline: { type: string }, cmsDescription: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48 } } }] }, relationships: { properties: { parent: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/parent } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: category }, id: { type: string, example: c3f1f055-6e20-4913-995f-dbc01ee343d1 } } }] } } }] }, media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: ea783762-b02d-4437-9a32-a417d0183097 } } }] } } }] }, productStream: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/productStream } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_stream }, id: { type: string, example: 5f9bed0a-3491-4c41-a9bf-882061e2f8d6 } } }] } } }] }, children: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/children } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: category }, id: { type: string, example: 894cfe2d-0a79-44e4-8de7-a862cc5fd365 } } }] } }] } } }] }, shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 3855d9e6-0c21-4b6c-8e7f-98b7b5be7e6d } } }] } }] } } }] }, products: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/products } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 7bcec6c2-3760-45e9-a61d-fafa31914a7c } } }] } }] } } }] }, seoProducts: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/seoProducts } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 8f9e4a52-af89-4469-b4a2-2bdfb26af683 } } }] } }] } } }] }, canonicalUrl: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /category/69415529-a25d-4e48-8862-03bd71dd1a48/canonicalUrl } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: seo_url }, id: { type: string, example: 1195ed61-a850-4d61-8dfa-ffecf802bdbd } } }] } } }] } } } } }] }, config_form_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: config_form }, id: { example: 0a9963d0-527e-46a9-8aaa-1d2ebbaec9e6 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { parentId: { type: string }, pluginId: { type: string }, name: { type: string }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, label: { type: string }, description: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /config-form/0a9963d0-527e-46a9-8aaa-1d2ebbaec9e6 } } }] } } }] }, config_form_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: config_form }, id: { example: 39bee681-acc8-45c9-b1e1-fecedbd94fe7 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { parentId: { type: string }, pluginId: { type: string }, name: { type: string }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, label: { type: string }, description: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /config-form/39bee681-acc8-45c9-b1e1-fecedbd94fe7 } } }] }, relationships: { properties: { parent: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form/39bee681-acc8-45c9-b1e1-fecedbd94fe7/parent } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form }, id: { type: string, example: 31411032-9250-448a-b9d4-345e9728fb0f } } }] } } }] }, plugin: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form/39bee681-acc8-45c9-b1e1-fecedbd94fe7/plugin } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: plugin }, id: { type: string, example: daabb5f7-2a33-42b9-80e3-c7f7cabebe96 } } }] } } }] }, children: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form/39bee681-acc8-45c9-b1e1-fecedbd94fe7/children } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form }, id: { type: string, example: ca5725dd-aec5-4371-9ac7-6ded433f326c } } }] } }] } } }] }, fields: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form/39bee681-acc8-45c9-b1e1-fecedbd94fe7/fields } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form_field }, id: { type: string, example: a2098d16-7cc3-4720-8739-17e5caa98d67 } } }] } }] } } }] } } } } }] }, config_form_field_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: config_form_field }, id: { example: e74e76b2-8479-4c68-8253-130d73b5e311 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, type], properties: { configFormId: { type: string }, name: { type: string }, type: { type: string }, value: { type: string }, required: { type: boolean }, position: { type: integer }, scope: { type: integer }, options: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, label: { type: string }, description: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /config-form-field/e74e76b2-8479-4c68-8253-130d73b5e311 } } }] } } }] }, config_form_field_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: config_form_field }, id: { example: 3dcf70a4-4f5f-4509-ac68-d805ceee5be4 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, type], properties: { configFormId: { type: string }, name: { type: string }, type: { type: string }, value: { type: string }, required: { type: boolean }, position: { type: integer }, scope: { type: integer }, options: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, label: { type: string }, description: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /config-form-field/3dcf70a4-4f5f-4509-ac68-d805ceee5be4 } } }] }, relationships: { properties: { configForm: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form-field/3dcf70a4-4f5f-4509-ac68-d805ceee5be4/configForm } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form }, id: { type: string, example: c1b36d24-5546-41d1-869c-0cb2b604b53d } } }] } } }] }, values: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form-field/3dcf70a4-4f5f-4509-ac68-d805ceee5be4/values } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form_field_value }, id: { type: string, example: bb13da28-7681-4dbb-8c09-39d24b2ce07b } } }] } }] } } }] } } } } }] }, config_form_field_value_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: config_form_field_value }, id: { example: 56da0b47-c32c-4df3-9b67-865b85a9d37a }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [configFormFieldId, value], properties: { configFormFieldId: { type: string }, shopId: { type: string }, value: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /config-form-field-value/56da0b47-c32c-4df3-9b67-865b85a9d37a } } }] } } }] }, config_form_field_value_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: config_form_field_value }, id: { example: ca29722d-0a79-4e0d-bcb9-c06a2092b0cf }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [configFormFieldId, value], properties: { configFormFieldId: { type: string }, shopId: { type: string }, value: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /config-form-field-value/ca29722d-0a79-4e0d-bcb9-c06a2092b0cf } } }] }, relationships: { properties: { configFormField: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form-field-value/ca29722d-0a79-4e0d-bcb9-c06a2092b0cf/configFormField } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form_field }, id: { type: string, example: edf41c23-94cf-45dc-929b-92fb95449488 } } }] } } }] }, shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /config-form-field-value/ca29722d-0a79-4e0d-bcb9-c06a2092b0cf/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 9f84055e-0c64-4e93-bc26-2ba97f1d52ae } } }] } } }] } } } } }] }, country_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: country }, id: { example: 6fa96353-df5e-4a5a-aed2-0b37208900f7 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { areaId: { type: string }, name: { type: string }, iso: { type: string }, position: { type: integer }, shippingFree: { type: boolean }, taxFree: { type: boolean }, taxfreeForVatId: { type: boolean }, taxfreeVatidChecked: { type: boolean }, active: { type: boolean }, iso3: { type: string }, displayStateInRegistration: { type: boolean }, forceStateInRegistration: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /country/6fa96353-df5e-4a5a-aed2-0b37208900f7 } } }] } } }] }, country_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: country }, id: { example: 53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { areaId: { type: string }, name: { type: string }, iso: { type: string }, position: { type: integer }, shippingFree: { type: boolean }, taxFree: { type: boolean }, taxfreeForVatId: { type: boolean }, taxfreeVatidChecked: { type: boolean }, active: { type: boolean }, iso3: { type: string }, displayStateInRegistration: { type: boolean }, forceStateInRegistration: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /country/53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa } } }] }, relationships: { properties: { area: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country/53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa/area } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_area }, id: { type: string, example: 3accfbe2-f6f5-4e9a-a379-d24cf234af0e } } }] } } }] }, states: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country/53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa/states } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_state }, id: { type: string, example: 8c2e4e4c-1015-4b4c-b927-0af6e81ea7b4 } } }] } }] } } }] }, customerAddresses: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country/53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa/customerAddresses } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_address }, id: { type: string, example: ec7cea36-b4f4-4dba-8d39-fb5fd6b72e17 } } }] } }] } } }] }, orderAddresses: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country/53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa/orderAddresses } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_address }, id: { type: string, example: 49e4a334-3ddc-45d1-9e6a-2f3431599c06 } } }] } }] } } }] }, shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country/53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: ac95715d-16cd-48cd-8d33-493b9923a7ad } } }] } }] } } }] }, taxAreaRules: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country/53041f5f-89b1-48d2-a6d5-f6ddf5dfefaa/taxAreaRules } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax_area_rule }, id: { type: string, example: 54a82403-5105-432b-a70d-95bebae45a71 } } }] } }] } } }] } } } } }] }, country_area_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: country_area }, id: { example: e9213a2e-c8db-42aa-8d5d-975a6b1192d9 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { name: { type: string }, active: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /country-area/e9213a2e-c8db-42aa-8d5d-975a6b1192d9 } } }] } } }] }, country_area_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: country_area }, id: { example: f6d5d1d2-248d-439d-a3c6-d68cbca8ce85 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { name: { type: string }, active: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /country-area/f6d5d1d2-248d-439d-a3c6-d68cbca8ce85 } } }] }, relationships: { properties: { countries: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country-area/f6d5d1d2-248d-439d-a3c6-d68cbca8ce85/countries } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: 01c3cd4f-12bc-4eca-91d5-97c4af577c1b } } }] } }] } } }] }, taxAreaRules: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country-area/f6d5d1d2-248d-439d-a3c6-d68cbca8ce85/taxAreaRules } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax_area_rule }, id: { type: string, example: 6d868d50-bce0-4d84-94ff-2098cbf38408 } } }] } }] } } }] } } } } }] }, country_state_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: country_state }, id: { example: 280a05f0-93ba-44e6-802d-5a2221509a3a }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [countryId, shortCode, name], properties: { countryId: { type: string }, shortCode: { type: string }, name: { type: string }, position: { type: integer }, active: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /country-state/280a05f0-93ba-44e6-802d-5a2221509a3a } } }] } } }] }, country_state_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: country_state }, id: { example: bb982eb0-7e19-45bb-9ddd-d6f662f7dfa7 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [countryId, shortCode, name], properties: { countryId: { type: string }, shortCode: { type: string }, name: { type: string }, position: { type: integer }, active: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /country-state/bb982eb0-7e19-45bb-9ddd-d6f662f7dfa7 } } }] }, relationships: { properties: { country: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country-state/bb982eb0-7e19-45bb-9ddd-d6f662f7dfa7/country } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: 17bba4d8-93e7-408b-84e7-87e2aee2ecf5 } } }] } } }] }, customerAddresses: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country-state/bb982eb0-7e19-45bb-9ddd-d6f662f7dfa7/customerAddresses } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_address }, id: { type: string, example: 7620f8fc-a65c-4e22-a7a7-722b93843eb7 } } }] } }] } } }] }, orderAddresses: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country-state/bb982eb0-7e19-45bb-9ddd-d6f662f7dfa7/orderAddresses } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_address }, id: { type: string, example: 176afbb6-f954-4d31-933b-ca9c081ae987 } } }] } }] } } }] }, taxAreaRules: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /country-state/bb982eb0-7e19-45bb-9ddd-d6f662f7dfa7/taxAreaRules } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax_area_rule }, id: { type: string, example: ad0da2ad-c72f-4d11-b8b8-57399443cb4d } } }] } }] } } }] } } } } }] }, currency_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: currency }, id: { example: 1efe7c06-c05e-42a1-b171-84cce496896f }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [factor, symbol, shortName, name], properties: { factor: { type: number, format: float }, symbol: { type: string }, shortName: { type: string }, name: { type: string }, isDefault: { type: boolean }, symbolPosition: { type: integer }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /currency/1efe7c06-c05e-42a1-b171-84cce496896f } } }] } } }] }, currency_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: currency }, id: { example: 10f01205-1898-4c8e-b513-96e8b290cee6 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [factor, symbol, shortName, name], properties: { factor: { type: number, format: float }, symbol: { type: string }, shortName: { type: string }, name: { type: string }, isDefault: { type: boolean }, symbolPosition: { type: integer }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /currency/10f01205-1898-4c8e-b513-96e8b290cee6 } } }] }, relationships: { properties: { orders: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /currency/10f01205-1898-4c8e-b513-96e8b290cee6/orders } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: 15813763-68e5-47b6-96e1-aa1df3045c79 } } }] } }] } } }] }, shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /currency/10f01205-1898-4c8e-b513-96e8b290cee6/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 167468b0-543d-420d-8fb5-3c100f5ee6e6 } } }] } }] } } }] } } } } }] }, customer_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer }, id: { example: 4875daf1-c329-4074-b15e-a9e616d5f1f1 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [groupId, defaultPaymentMethodId, shopId, defaultBillingAddressId, defaultShippingAddressId, number, salutation, firstName, lastName, password, email], properties: { groupId: { type: string }, defaultPaymentMethodId: { type: string }, shopId: { type: string }, lastPaymentMethodId: { type: string }, defaultBillingAddressId: { type: string }, defaultShippingAddressId: { type: string }, number: { type: string }, salutation: { type: string }, firstName: { type: string }, lastName: { type: string }, password: { type: string }, email: { type: string }, title: { type: string }, encoder: { type: string }, active: { type: boolean }, accountMode: { type: integer }, confirmationKey: { type: string }, firstLogin: { type: string, format: date-time }, lastLogin: { type: string, format: date-time }, sessionId: { type: string }, newsletter: { type: boolean }, validation: { type: string }, affiliate: { type: boolean }, referer: { type: string }, internalComment: { type: string }, failedLogins: { type: integer }, lockedUntil: { type: string, format: date-time }, birthday: { type: string, format: date-time }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer/4875daf1-c329-4074-b15e-a9e616d5f1f1 } } }] }, relationships: { properties: { group: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/4875daf1-c329-4074-b15e-a9e616d5f1f1/group } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: ae32d5ac-e313-4486-a8ce-af5e7cf06013 } } }] } } }] }, defaultPaymentMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/4875daf1-c329-4074-b15e-a9e616d5f1f1/defaultPaymentMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: 78a90bb0-d3c0-43db-9b52-0837a33736ae } } }] } } }] }, shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/4875daf1-c329-4074-b15e-a9e616d5f1f1/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: f0c22aa5-38d8-4a64-98f6-adf8bf9a4779 } } }] } } }] }, lastPaymentMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/4875daf1-c329-4074-b15e-a9e616d5f1f1/lastPaymentMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: fe9d756d-8b6e-433b-931f-8754ba504608 } } }] } } }] }, defaultBillingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/4875daf1-c329-4074-b15e-a9e616d5f1f1/defaultBillingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_address }, id: { type: string, example: 041f330b-6077-494f-a45f-d7afa51adaf9 } } }] } } }] }, defaultShippingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/4875daf1-c329-4074-b15e-a9e616d5f1f1/defaultShippingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_address }, id: { type: string, example: 3a2b484f-fb31-45b8-b6e3-77e476ba2184 } } }] } } }] } } } } }] }, customer_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer }, id: { example: d3415660-6735-40a9-81d1-bcc0b04d61a1 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [groupId, defaultPaymentMethodId, shopId, defaultBillingAddressId, defaultShippingAddressId, number, salutation, firstName, lastName, password, email], properties: { groupId: { type: string }, defaultPaymentMethodId: { type: string }, shopId: { type: string }, lastPaymentMethodId: { type: string }, defaultBillingAddressId: { type: string }, defaultShippingAddressId: { type: string }, number: { type: string }, salutation: { type: string }, firstName: { type: string }, lastName: { type: string }, password: { type: string }, email: { type: string }, title: { type: string }, encoder: { type: string }, active: { type: boolean }, accountMode: { type: integer }, confirmationKey: { type: string }, firstLogin: { type: string, format: date-time }, lastLogin: { type: string, format: date-time }, sessionId: { type: string }, newsletter: { type: boolean }, validation: { type: string }, affiliate: { type: boolean }, referer: { type: string }, internalComment: { type: string }, failedLogins: { type: integer }, lockedUntil: { type: string, format: date-time }, birthday: { type: string, format: date-time }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1 } } }] }, relationships: { properties: { group: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/group } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: 64f94ed6-24d3-44d9-bd32-1dec77dd1e71 } } }] } } }] }, defaultPaymentMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/defaultPaymentMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: bd663257-1158-4d1e-bdd0-274ad80874e8 } } }] } } }] }, shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 1fe47b43-be34-4253-bbda-b261e79e5345 } } }] } } }] }, lastPaymentMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/lastPaymentMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: 8eb2958b-4412-4953-a210-a02275d01710 } } }] } } }] }, defaultBillingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/defaultBillingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_address }, id: { type: string, example: e1c02843-2077-4c92-9691-bdd67de8c126 } } }] } } }] }, defaultShippingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/defaultShippingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_address }, id: { type: string, example: f385b246-0e15-42af-bb5d-33ae379222ec } } }] } } }] }, addresses: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/addresses } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_address }, id: { type: string, example: 6ad988f8-b43c-4f39-8a36-2abe363c2548 } } }] } }] } } }] }, orders: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer/d3415660-6735-40a9-81d1-bcc0b04d61a1/orders } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: cdcdb233-3e13-45ee-999e-1b08e808f4a4 } } }] } }] } } }] } } } } }] }, customer_address_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer_address }, id: { example: da1bcfd7-4fb7-40a1-9cd3-4691cdb60398 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerId, countryId, salutation, firstName, lastName, zipcode, city], properties: { customerId: { type: string }, countryId: { type: string }, countryStateId: { type: string }, salutation: { type: string }, firstName: { type: string }, lastName: { type: string }, zipcode: { type: string }, city: { type: string }, company: { type: string }, department: { type: string }, title: { type: string }, street: { type: string }, vatId: { type: string }, phoneNumber: { type: string }, additionalAddressLine1: { type: string }, additionalAddressLine2: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer-address/da1bcfd7-4fb7-40a1-9cd3-4691cdb60398 } } }] }, relationships: { properties: { country: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-address/da1bcfd7-4fb7-40a1-9cd3-4691cdb60398/country } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: 27d6b875-0d05-4598-adfd-8490e93547c9 } } }] } } }] }, countryState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-address/da1bcfd7-4fb7-40a1-9cd3-4691cdb60398/countryState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_state }, id: { type: string, example: b484a28f-e672-4787-b568-39bcee2c094b } } }] } } }] } } } } }] }, customer_address_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer_address }, id: { example: 77b29b58-f33f-4b1e-9d63-e2664bba7299 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerId, countryId, salutation, firstName, lastName, zipcode, city], properties: { customerId: { type: string }, countryId: { type: string }, countryStateId: { type: string }, salutation: { type: string }, firstName: { type: string }, lastName: { type: string }, zipcode: { type: string }, city: { type: string }, company: { type: string }, department: { type: string }, title: { type: string }, street: { type: string }, vatId: { type: string }, phoneNumber: { type: string }, additionalAddressLine1: { type: string }, additionalAddressLine2: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer-address/77b29b58-f33f-4b1e-9d63-e2664bba7299 } } }] }, relationships: { properties: { customer: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-address/77b29b58-f33f-4b1e-9d63-e2664bba7299/customer } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer }, id: { type: string, example: c9db1cd6-1bce-40b9-9d9e-bcd14d427e85 } } }] } } }] }, country: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-address/77b29b58-f33f-4b1e-9d63-e2664bba7299/country } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: 4676905f-fc59-4924-88c9-924f04f67832 } } }] } } }] }, countryState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-address/77b29b58-f33f-4b1e-9d63-e2664bba7299/countryState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_state }, id: { type: string, example: ae48b6ce-9fa4-40cf-922a-8bf0e9e0b9a7 } } }] } } }] } } } } }] }, customer_group_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer_group }, id: { example: a0794725-dce1-43a4-8f46-4796d4f93c59 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { name: { type: string }, displayGross: { type: boolean }, inputGross: { type: boolean }, hasGlobalDiscount: { type: boolean }, percentageGlobalDiscount: { type: number, format: float }, minimumOrderAmount: { type: number, format: float }, minimumOrderAmountSurcharge: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer-group/a0794725-dce1-43a4-8f46-4796d4f93c59 } } }] } } }] }, customer_group_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer_group }, id: { example: b491d7ec-6ea6-4abd-bca2-145fffbc2b99 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { name: { type: string }, displayGross: { type: boolean }, inputGross: { type: boolean }, hasGlobalDiscount: { type: boolean }, percentageGlobalDiscount: { type: number, format: float }, minimumOrderAmount: { type: number, format: float }, minimumOrderAmountSurcharge: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99 } } }] }, relationships: { properties: { customers: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99/customers } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer }, id: { type: string, example: fd81da0a-56f6-4aa3-9e37-2488feade94c } } }] } }] } } }] }, discounts: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99/discounts } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group_discount }, id: { type: string, example: cf822ded-29b5-4d04-92f7-1192b39ffa94 } } }] } }] } } }] }, productListingPrices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99/productListingPrices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_listing_price }, id: { type: string, example: 04afbc49-dc8a-4be0-b64f-d27747ba09a8 } } }] } }] } } }] }, productPrices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99/productPrices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_price }, id: { type: string, example: c4ede2d0-0ebb-4b9e-80fa-a308fca2e815 } } }] } }] } } }] }, shippingMethods: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99/shippingMethods } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shipping_method }, id: { type: string, example: 88326415-cde9-440c-ae22-6c4fd3de96e3 } } }] } }] } } }] }, shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 8ff1df25-e0cd-49a1-ac8f-9eb1b1334f32 } } }] } }] } } }] }, taxAreaRules: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group/b491d7ec-6ea6-4abd-bca2-145fffbc2b99/taxAreaRules } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax_area_rule }, id: { type: string, example: e70ed86a-113a-44c1-aab1-a7f78e1f4886 } } }] } }] } } }] } } } } }] }, customer_group_discount_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer_group_discount }, id: { example: 0df88b9e-2415-4aaa-9d63-49a70e137e79 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerGroupId, percentageDiscount, minimumCartAmount], properties: { customerGroupId: { type: string }, percentageDiscount: { type: number, format: float }, minimumCartAmount: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer-group-discount/0df88b9e-2415-4aaa-9d63-49a70e137e79 } } }] } } }] }, customer_group_discount_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: customer_group_discount }, id: { example: b75aadd3-9f93-4d2d-8886-ba4db998fa67 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerGroupId, percentageDiscount, minimumCartAmount], properties: { customerGroupId: { type: string }, percentageDiscount: { type: number, format: float }, minimumCartAmount: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /customer-group-discount/b75aadd3-9f93-4d2d-8886-ba4db998fa67 } } }] }, relationships: { properties: { customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /customer-group-discount/b75aadd3-9f93-4d2d-8886-ba4db998fa67/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: 4e851fd2-b5aa-48b4-a18e-2c36f151c1dd } } }] } } }] } } } } }] }, listing_facet_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: listing_facet }, id: { example: 7de4c6c1-8207-4784-8a3f-486264b97c06 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [uniqueKey, payload, name], properties: { uniqueKey: { type: string }, payload: { type: string }, name: { type: string }, active: { type: boolean }, displayInCategories: { type: boolean }, deletable: { type: boolean }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /listing-facet/7de4c6c1-8207-4784-8a3f-486264b97c06 } } }] } } }] }, listing_facet_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: listing_facet }, id: { example: a0bcadc0-ccd0-4d0c-a5c2-d106d45316e0 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [uniqueKey, payload, name], properties: { uniqueKey: { type: string }, payload: { type: string }, name: { type: string }, active: { type: boolean }, displayInCategories: { type: boolean }, deletable: { type: boolean }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /listing-facet/a0bcadc0-ccd0-4d0c-a5c2-d106d45316e0 } } }] } } }] }, listing_sorting_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: listing_sorting }, id: { example: 9bc1edec-adaf-4f3e-9f3a-916f6ff7066f }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [payload, label], properties: { payload: { type: string }, label: { type: string }, active: { type: boolean }, displayInCategories: { type: boolean }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /listing-sorting/9bc1edec-adaf-4f3e-9f3a-916f6ff7066f } } }] } } }] }, listing_sorting_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: listing_sorting }, id: { example: 4a3ec273-662c-40dc-8f18-d46742ae21d7 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [payload, label], properties: { payload: { type: string }, label: { type: string }, active: { type: boolean }, displayInCategories: { type: boolean }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /listing-sorting/4a3ec273-662c-40dc-8f18-d46742ae21d7 } } }] }, relationships: { properties: { productStreams: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /listing-sorting/4a3ec273-662c-40dc-8f18-d46742ae21d7/productStreams } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_stream }, id: { type: string, example: 5376f46f-c956-407d-af9d-4719095ead7c } } }] } }] } } }] } } } } }] }, locale_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: locale }, id: { example: 9f75231c-5f10-40fd-923d-a3685ba19989 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [code, name, territory], properties: { code: { type: string }, name: { type: string }, territory: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /locale/9f75231c-5f10-40fd-923d-a3685ba19989 } } }] } } }] }, locale_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: locale }, id: { example: 8577ed47-95c3-4113-83ca-4b4bbb52769c }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [code, name, territory], properties: { code: { type: string }, name: { type: string }, territory: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /locale/8577ed47-95c3-4113-83ca-4b4bbb52769c } } }] }, relationships: { properties: { shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /locale/8577ed47-95c3-4113-83ca-4b4bbb52769c/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: fe4c35cc-6a53-46d2-abad-3e7faa45c735 } } }] } }] } } }] }, users: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /locale/8577ed47-95c3-4113-83ca-4b4bbb52769c/users } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: user }, id: { type: string, example: cabc7d40-11b8-45fd-b3af-418e63f211b7 } } }] } }] } } }] } } } } }] }, log_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: log }, id: { example: 753ea3ac-e535-4c4c-acd0-d49755b8f567 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [type, key, text, date, user, ipAddress, userAgent, value4], properties: { type: { type: string }, key: { type: string }, text: { type: string }, date: { type: string, format: date-time }, user: { type: string }, ipAddress: { type: string }, userAgent: { type: string }, value4: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /log/753ea3ac-e535-4c4c-acd0-d49755b8f567 } } }] } } }] }, log_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: log }, id: { example: cb291c36-e688-4123-b266-609b29ce9c41 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [type, key, text, date, user, ipAddress, userAgent, value4], properties: { type: { type: string }, key: { type: string }, text: { type: string }, date: { type: string, format: date-time }, user: { type: string }, ipAddress: { type: string }, userAgent: { type: string }, value4: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /log/cb291c36-e688-4123-b266-609b29ce9c41 } } }] } } }] }, mail_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: mail }, id: { example: 9f9ded3c-f847-49b5-ace9-c034984af2d3 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, isHtml, attachment, fromMail, fromName, subject, content, contentHtml], properties: { orderStateId: { type: string }, name: { type: string }, isHtml: { type: boolean }, attachment: { type: string }, fromMail: { type: string }, fromName: { type: string }, subject: { type: string }, content: { type: string }, contentHtml: { type: string }, type: { type: integer }, context: { type: string }, dirty: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /mail/9f9ded3c-f847-49b5-ace9-c034984af2d3 } } }] } } }] }, mail_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: mail }, id: { example: 80b6bafd-dde4-4940-841d-23cdd8564cd8 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, isHtml, attachment, fromMail, fromName, subject, content, contentHtml], properties: { orderStateId: { type: string }, name: { type: string }, isHtml: { type: boolean }, attachment: { type: string }, fromMail: { type: string }, fromName: { type: string }, subject: { type: string }, content: { type: string }, contentHtml: { type: string }, type: { type: integer }, context: { type: string }, dirty: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /mail/80b6bafd-dde4-4940-841d-23cdd8564cd8 } } }] }, relationships: { properties: { orderState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /mail/80b6bafd-dde4-4940-841d-23cdd8564cd8/orderState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_state }, id: { type: string, example: 89b6d03d-c4a1-41c1-b382-43f9c106fe9e } } }] } } }] }, attachments: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /mail/80b6bafd-dde4-4940-841d-23cdd8564cd8/attachments } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: mail_attachment }, id: { type: string, example: dfec4366-558a-446e-a9ad-93b73b2a4a92 } } }] } }] } } }] } } } } }] }, mail_attachment_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: mail_attachment }, id: { example: 4947a756-276e-4000-a4d1-7f25a24e35c1 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [mailId, mediaId], properties: { mailId: { type: string }, mediaId: { type: string }, shopId: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /mail-attachment/4947a756-276e-4000-a4d1-7f25a24e35c1 } } }] } } }] }, mail_attachment_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: mail_attachment }, id: { example: b4632b9b-de7c-4a82-aed1-73e08ea4fdc1 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [mailId, mediaId], properties: { mailId: { type: string }, mediaId: { type: string }, shopId: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /mail-attachment/b4632b9b-de7c-4a82-aed1-73e08ea4fdc1 } } }] }, relationships: { properties: { mail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /mail-attachment/b4632b9b-de7c-4a82-aed1-73e08ea4fdc1/mail } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: mail }, id: { type: string, example: 7328ae8f-bd4d-4c6a-85d1-b6b78dd586ed } } }] } } }] }, media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /mail-attachment/b4632b9b-de7c-4a82-aed1-73e08ea4fdc1/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: ea7ec809-7bf4-4138-a50b-badee9b9fd94 } } }] } } }] }, shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /mail-attachment/b4632b9b-de7c-4a82-aed1-73e08ea4fdc1/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 39375732-1c8f-480d-ab68-dcac1f5bd5dd } } }] } } }] } } } } }] }, media_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: media }, id: { example: 4ef1c33f-7a25-46e6-ba68-926e463b28de }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [albumId, fileName, mimeType, fileSize, name], properties: { albumId: { type: string }, userId: { type: string }, fileName: { type: string }, mimeType: { type: string }, fileSize: { type: integer }, name: { type: string }, metaData: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, description: { type: string }, url: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /media/4ef1c33f-7a25-46e6-ba68-926e463b28de } } }] }, relationships: { properties: { album: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media/4ef1c33f-7a25-46e6-ba68-926e463b28de/album } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media_album }, id: { type: string, example: fa78649b-265f-4fe5-9bd2-626eec6ea274 } } }] } } }] } } } } }] }, media_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: media }, id: { example: a24e1af0-8aec-4405-ad92-e00e1771abb4 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [albumId, fileName, mimeType, fileSize, name], properties: { albumId: { type: string }, userId: { type: string }, fileName: { type: string }, mimeType: { type: string }, fileSize: { type: integer }, name: { type: string }, metaData: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, description: { type: string }, url: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /media/a24e1af0-8aec-4405-ad92-e00e1771abb4 } } }] }, relationships: { properties: { album: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media/a24e1af0-8aec-4405-ad92-e00e1771abb4/album } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media_album }, id: { type: string, example: d1ef31ae-00f3-49de-87b7-622be59e5c3e } } }] } } }] }, user: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media/a24e1af0-8aec-4405-ad92-e00e1771abb4/user } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: user }, id: { type: string, example: 4b8720f1-03cf-4b43-b5de-78d063fa67d7 } } }] } } }] }, categories: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media/a24e1af0-8aec-4405-ad92-e00e1771abb4/categories } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: category }, id: { type: string, example: 851b3b26-8069-4f6a-b697-a4f9e806ed02 } } }] } }] } } }] }, mailAttachments: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media/a24e1af0-8aec-4405-ad92-e00e1771abb4/mailAttachments } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: mail_attachment }, id: { type: string, example: f243455f-3035-4726-929c-765d1fcf703a } } }] } }] } } }] }, productManufacturers: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media/a24e1af0-8aec-4405-ad92-e00e1771abb4/productManufacturers } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_manufacturer }, id: { type: string, example: d568b396-42f0-4ef6-9771-ff4064cc07fc } } }] } }] } } }] }, productMedia: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media/a24e1af0-8aec-4405-ad92-e00e1771abb4/productMedia } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_media }, id: { type: string, example: 38a69a23-9650-42be-849b-9fa63b7542b4 } } }] } }] } } }] } } } } }] }, media_album_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: media_album }, id: { example: 3a5a79ec-51b1-466c-b19f-e986dce4c264 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { parentId: { type: string }, name: { type: string }, position: { type: integer }, createThumbnails: { type: boolean }, thumbnailSize: { type: string }, icon: { type: string }, thumbnailHighDpi: { type: boolean }, thumbnailQuality: { type: integer }, thumbnailHighDpiQuality: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /media-album/3a5a79ec-51b1-466c-b19f-e986dce4c264 } } }] } } }] }, media_album_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: media_album }, id: { example: 97798309-73dd-4501-ab13-14f6fac390d0 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { parentId: { type: string }, name: { type: string }, position: { type: integer }, createThumbnails: { type: boolean }, thumbnailSize: { type: string }, icon: { type: string }, thumbnailHighDpi: { type: boolean }, thumbnailQuality: { type: integer }, thumbnailHighDpiQuality: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /media-album/97798309-73dd-4501-ab13-14f6fac390d0 } } }] }, relationships: { properties: { parent: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media-album/97798309-73dd-4501-ab13-14f6fac390d0/parent } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media_album }, id: { type: string, example: 7a97f776-aa9a-4601-be99-4abb2416e46b } } }] } } }] }, media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media-album/97798309-73dd-4501-ab13-14f6fac390d0/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: b4c2d9e4-bdab-4233-9d1b-5dc75c4d71fd } } }] } }] } } }] }, children: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /media-album/97798309-73dd-4501-ab13-14f6fac390d0/children } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media_album }, id: { type: string, example: 66bca63d-eb3e-4f7d-a9fd-ab99b45186e1 } } }] } }] } } }] } } } } }] }, order_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order }, id: { example: d59e0724-5834-4fa8-89d3-002a0c5d5314 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerId, stateId, paymentMethodId, currencyId, shopId, billingAddressId, date, amountTotal, positionPrice, shippingTotal, isNet, isTaxFree, context, payload], properties: { customerId: { type: string }, stateId: { type: string }, paymentMethodId: { type: string }, currencyId: { type: string }, shopId: { type: string }, billingAddressId: { type: string }, date: { type: string, format: date-time }, amountTotal: { type: number, format: float }, positionPrice: { type: number, format: float }, shippingTotal: { type: number, format: float }, isNet: { type: boolean }, isTaxFree: { type: boolean }, context: { type: string }, payload: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order/d59e0724-5834-4fa8-89d3-002a0c5d5314 } } }] }, relationships: { properties: { customer: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/d59e0724-5834-4fa8-89d3-002a0c5d5314/customer } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer }, id: { type: string, example: 366b1408-3842-4b1b-a7d8-b3aaa1b53dd9 } } }] } } }] }, state: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/d59e0724-5834-4fa8-89d3-002a0c5d5314/state } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_state }, id: { type: string, example: 68fa842b-80f2-46fd-ad28-bb7b751e3679 } } }] } } }] }, paymentMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/d59e0724-5834-4fa8-89d3-002a0c5d5314/paymentMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: 2106c9f2-7178-40a1-8b56-14b16d79b148 } } }] } } }] }, currency: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/d59e0724-5834-4fa8-89d3-002a0c5d5314/currency } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: currency }, id: { type: string, example: dbd61780-9a13-4bd5-bde2-62fc1e9b1fdc } } }] } } }] }, shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/d59e0724-5834-4fa8-89d3-002a0c5d5314/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 1afe3c40-8f87-4aac-9d85-67d49c746f27 } } }] } } }] }, billingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/d59e0724-5834-4fa8-89d3-002a0c5d5314/billingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_address }, id: { type: string, example: 5194e19b-06e9-4d01-afd4-99b5b78277ad } } }] } } }] } } } } }] }, order_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order }, id: { example: a272a9be-2bde-4b35-916a-d965b6e52b95 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerId, stateId, paymentMethodId, currencyId, shopId, billingAddressId, date, amountTotal, positionPrice, shippingTotal, isNet, isTaxFree, context, payload], properties: { customerId: { type: string }, stateId: { type: string }, paymentMethodId: { type: string }, currencyId: { type: string }, shopId: { type: string }, billingAddressId: { type: string }, date: { type: string, format: date-time }, amountTotal: { type: number, format: float }, positionPrice: { type: number, format: float }, shippingTotal: { type: number, format: float }, isNet: { type: boolean }, isTaxFree: { type: boolean }, context: { type: string }, payload: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95 } } }] }, relationships: { properties: { customer: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/customer } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer }, id: { type: string, example: 03247a46-e2bd-4992-919e-307c312d036b } } }] } } }] }, state: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/state } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_state }, id: { type: string, example: 3042af26-e056-4ea5-8dc0-04d6b908ebc7 } } }] } } }] }, paymentMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/paymentMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: 66a4c033-e25d-463c-966e-b1eff488dd73 } } }] } } }] }, currency: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/currency } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: currency }, id: { type: string, example: cdb79ecd-2c02-4aec-b1cb-5880f8bd2fb8 } } }] } } }] }, shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 02226029-d5bf-4aa0-9430-7cf09eb4962a } } }] } } }] }, billingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/billingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_address }, id: { type: string, example: d8db22b9-0561-4940-9e69-85c7ae253154 } } }] } } }] }, deliveries: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/deliveries } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_delivery }, id: { type: string, example: 28e25dd4-5617-4f0b-9bc2-34f16caa1efc } } }] } }] } } }] }, lineItems: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order/a272a9be-2bde-4b35-916a-d965b6e52b95/lineItems } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_line_item }, id: { type: string, example: 01baafe8-ea94-4894-b1d4-58f83ee74518 } } }] } }] } } }] } } } } }] }, order_address_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_address }, id: { example: 53790e93-224c-419e-8400-064dafd30a1e }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [countryId, salutation, firstName, lastName, street, zipcode, city], properties: { countryId: { type: string }, countryStateId: { type: string }, salutation: { type: string }, firstName: { type: string }, lastName: { type: string }, street: { type: string }, zipcode: { type: string }, city: { type: string }, company: { type: string }, department: { type: string }, title: { type: string }, vatId: { type: string }, phoneNumber: { type: string }, additionalAddressLine1: { type: string }, additionalAddressLine2: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-address/53790e93-224c-419e-8400-064dafd30a1e } } }] }, relationships: { properties: { country: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-address/53790e93-224c-419e-8400-064dafd30a1e/country } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: e329889b-5929-4689-9d95-68d6050a44be } } }] } } }] }, countryState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-address/53790e93-224c-419e-8400-064dafd30a1e/countryState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_state }, id: { type: string, example: 1dd1057c-664e-4cb0-abab-564635267d0b } } }] } } }] } } } } }] }, order_address_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_address }, id: { example: b01e750c-933d-4bf1-8809-361a87ccb591 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [countryId, salutation, firstName, lastName, street, zipcode, city], properties: { countryId: { type: string }, countryStateId: { type: string }, salutation: { type: string }, firstName: { type: string }, lastName: { type: string }, street: { type: string }, zipcode: { type: string }, city: { type: string }, company: { type: string }, department: { type: string }, title: { type: string }, vatId: { type: string }, phoneNumber: { type: string }, additionalAddressLine1: { type: string }, additionalAddressLine2: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-address/b01e750c-933d-4bf1-8809-361a87ccb591 } } }] }, relationships: { properties: { country: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-address/b01e750c-933d-4bf1-8809-361a87ccb591/country } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: 7830e011-c262-4f6e-9554-7f27380d50db } } }] } } }] }, countryState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-address/b01e750c-933d-4bf1-8809-361a87ccb591/countryState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_state }, id: { type: string, example: 33cf11d1-8546-408f-8525-81172b2959d1 } } }] } } }] }, orders: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-address/b01e750c-933d-4bf1-8809-361a87ccb591/orders } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: 0bb79cef-aca6-4518-a2b9-aa8af870c55c } } }] } }] } } }] }, orderDeliveries: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-address/b01e750c-933d-4bf1-8809-361a87ccb591/orderDeliveries } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_delivery }, id: { type: string, example: a1f6308c-cc1c-4201-abe0-6fc09f01de76 } } }] } }] } } }] } } } } }] }, order_delivery_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_delivery }, id: { example: efb90cf5-e9ea-40cf-955a-a48ef224fd4d }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [orderId, shippingAddressId, orderStateId, shippingMethodId, shippingDateEarliest, shippingDateLatest, payload], properties: { orderId: { type: string }, shippingAddressId: { type: string }, orderStateId: { type: string }, shippingMethodId: { type: string }, shippingDateEarliest: { type: string, format: date-time }, shippingDateLatest: { type: string, format: date-time }, payload: { type: string }, trackingCode: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-delivery/efb90cf5-e9ea-40cf-955a-a48ef224fd4d } } }] }, relationships: { properties: { shippingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/efb90cf5-e9ea-40cf-955a-a48ef224fd4d/shippingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_address }, id: { type: string, example: 8ccd657e-2a23-42ac-a764-363e19c293ab } } }] } } }] }, orderState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/efb90cf5-e9ea-40cf-955a-a48ef224fd4d/orderState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_state }, id: { type: string, example: 765f1e77-e155-4671-8552-419ae528ad97 } } }] } } }] }, shippingMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/efb90cf5-e9ea-40cf-955a-a48ef224fd4d/shippingMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shipping_method }, id: { type: string, example: bf678b4a-48f9-4c54-ab71-8c8a189d9760 } } }] } } }] } } } } }] }, order_delivery_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_delivery }, id: { example: 7aaa8819-1eec-424b-9c06-48898a4c5409 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [orderId, shippingAddressId, orderStateId, shippingMethodId, shippingDateEarliest, shippingDateLatest, payload], properties: { orderId: { type: string }, shippingAddressId: { type: string }, orderStateId: { type: string }, shippingMethodId: { type: string }, shippingDateEarliest: { type: string, format: date-time }, shippingDateLatest: { type: string, format: date-time }, payload: { type: string }, trackingCode: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-delivery/7aaa8819-1eec-424b-9c06-48898a4c5409 } } }] }, relationships: { properties: { order: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/7aaa8819-1eec-424b-9c06-48898a4c5409/order } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: 86a22c95-cdcd-44de-98eb-5f4a042ef675 } } }] } } }] }, shippingAddress: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/7aaa8819-1eec-424b-9c06-48898a4c5409/shippingAddress } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_address }, id: { type: string, example: 103df330-0eda-4ebe-a7f1-f43b5c5231ed } } }] } } }] }, orderState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/7aaa8819-1eec-424b-9c06-48898a4c5409/orderState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_state }, id: { type: string, example: 10929219-801b-4330-856d-3a79843b7789 } } }] } } }] }, shippingMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/7aaa8819-1eec-424b-9c06-48898a4c5409/shippingMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shipping_method }, id: { type: string, example: b06e5697-74c0-4924-896d-3e32518cd22e } } }] } } }] }, positions: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery/7aaa8819-1eec-424b-9c06-48898a4c5409/positions } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_delivery_position }, id: { type: string, example: 49ee816d-5492-4d83-8059-e6626b9faa7e } } }] } }] } } }] } } } } }] }, order_delivery_position_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_delivery_position }, id: { example: a7569814-a7de-4fe7-b5e9-b43bd59545bc }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [orderDeliveryId, orderLineItemId, unitPrice, totalPrice, quantity, payload], properties: { orderDeliveryId: { type: string }, orderLineItemId: { type: string }, unitPrice: { type: number, format: float }, totalPrice: { type: number, format: float }, quantity: { type: number, format: float }, payload: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-delivery-position/a7569814-a7de-4fe7-b5e9-b43bd59545bc } } }] }, relationships: { properties: { orderLineItem: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery-position/a7569814-a7de-4fe7-b5e9-b43bd59545bc/orderLineItem } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_line_item }, id: { type: string, example: e9e9e915-316b-4fa8-82ae-5b96a79f579a } } }] } } }] } } } } }] }, order_delivery_position_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_delivery_position }, id: { example: d087a225-adf9-443c-9988-fa485c95aaa2 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [orderDeliveryId, orderLineItemId, unitPrice, totalPrice, quantity, payload], properties: { orderDeliveryId: { type: string }, orderLineItemId: { type: string }, unitPrice: { type: number, format: float }, totalPrice: { type: number, format: float }, quantity: { type: number, format: float }, payload: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-delivery-position/d087a225-adf9-443c-9988-fa485c95aaa2 } } }] }, relationships: { properties: { orderDelivery: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery-position/d087a225-adf9-443c-9988-fa485c95aaa2/orderDelivery } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_delivery }, id: { type: string, example: b2517e2b-a1e2-44e0-a6e4-9c55c60e9923 } } }] } } }] }, orderLineItem: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-delivery-position/d087a225-adf9-443c-9988-fa485c95aaa2/orderLineItem } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_line_item }, id: { type: string, example: 628e28fa-04c3-4514-bcd6-3b6583434207 } } }] } } }] } } } } }] }, order_line_item_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_line_item }, id: { example: 456544ea-9fca-43b3-ad21-314f6f97d352 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [orderId, identifier, quantity, unitPrice, totalPrice, payload], properties: { orderId: { type: string }, identifier: { type: string }, quantity: { type: integer }, unitPrice: { type: number, format: float }, totalPrice: { type: number, format: float }, payload: { type: string }, type: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-line-item/456544ea-9fca-43b3-ad21-314f6f97d352 } } }] } } }] }, order_line_item_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_line_item }, id: { example: 5a0b85a2-3cbf-4358-80d4-544d2051cb96 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [orderId, identifier, quantity, unitPrice, totalPrice, payload], properties: { orderId: { type: string }, identifier: { type: string }, quantity: { type: integer }, unitPrice: { type: number, format: float }, totalPrice: { type: number, format: float }, payload: { type: string }, type: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-line-item/5a0b85a2-3cbf-4358-80d4-544d2051cb96 } } }] }, relationships: { properties: { order: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-line-item/5a0b85a2-3cbf-4358-80d4-544d2051cb96/order } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: 17de1011-e33d-4cfd-a704-f37cb9141501 } } }] } } }] }, orderDeliveryPositions: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-line-item/5a0b85a2-3cbf-4358-80d4-544d2051cb96/orderDeliveryPositions } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_delivery_position }, id: { type: string, example: cd6e321a-5114-4756-afdd-937ffcf0910a } } }] } }] } } }] } } } } }] }, order_state_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_state }, id: { example: 9cfe39a2-bb17-4860-9b3e-cf91dd95b67c }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, description], properties: { name: { type: string }, description: { type: string }, position: { type: integer }, hasMail: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-state/9cfe39a2-bb17-4860-9b3e-cf91dd95b67c } } }] } } }] }, order_state_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: order_state }, id: { example: 3aca0b4a-498c-46fe-8112-b67c6ef0b34c }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, description], properties: { name: { type: string }, description: { type: string }, position: { type: integer }, hasMail: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /order-state/3aca0b4a-498c-46fe-8112-b67c6ef0b34c } } }] }, relationships: { properties: { mails: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-state/3aca0b4a-498c-46fe-8112-b67c6ef0b34c/mails } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: mail }, id: { type: string, example: 05f6450b-82a9-4197-bb82-d0a43c814a10 } } }] } }] } } }] }, orders: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-state/3aca0b4a-498c-46fe-8112-b67c6ef0b34c/orders } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: 85150294-95df-4414-80e9-7ec1a011ca36 } } }] } }] } } }] }, orderDeliveries: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /order-state/3aca0b4a-498c-46fe-8112-b67c6ef0b34c/orderDeliveries } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_delivery }, id: { type: string, example: 4eb68d34-a47b-4060-9a5c-956b77cb0230 } } }] } }] } } }] } } } } }] }, payment_method_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: payment_method }, id: { example: 959191d9-d0ad-4a8c-a7ab-8a911ed1c627 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [technicalName, name, additionalDescription], properties: { pluginId: { type: string }, technicalName: { type: string }, name: { type: string }, additionalDescription: { type: string }, template: { type: string }, class: { type: string }, table: { type: string }, hide: { type: boolean }, percentageSurcharge: { type: number, format: float }, absoluteSurcharge: { type: number, format: float }, surchargeString: { type: string }, position: { type: integer }, active: { type: boolean }, allowEsd: { type: boolean }, usedIframe: { type: string }, hideProspect: { type: boolean }, action: { type: string }, source: { type: integer }, mobileInactive: { type: boolean }, riskRules: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /payment-method/959191d9-d0ad-4a8c-a7ab-8a911ed1c627 } } }] } } }] }, payment_method_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: payment_method }, id: { example: 24588ec6-2a95-4b74-82a1-4842f8877615 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [technicalName, name, additionalDescription], properties: { pluginId: { type: string }, technicalName: { type: string }, name: { type: string }, additionalDescription: { type: string }, template: { type: string }, class: { type: string }, table: { type: string }, hide: { type: boolean }, percentageSurcharge: { type: number, format: float }, absoluteSurcharge: { type: number, format: float }, surchargeString: { type: string }, position: { type: integer }, active: { type: boolean }, allowEsd: { type: boolean }, usedIframe: { type: string }, hideProspect: { type: boolean }, action: { type: string }, source: { type: integer }, mobileInactive: { type: boolean }, riskRules: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /payment-method/24588ec6-2a95-4b74-82a1-4842f8877615 } } }] }, relationships: { properties: { plugin: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /payment-method/24588ec6-2a95-4b74-82a1-4842f8877615/plugin } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: plugin }, id: { type: string, example: 287f62bb-16a9-43a6-8fff-6e5962f1e700 } } }] } } }] }, customers: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /payment-method/24588ec6-2a95-4b74-82a1-4842f8877615/customers } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer }, id: { type: string, example: 83f0170c-3748-4022-abb4-ff0793a41294 } } }] } }] } } }] }, orders: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /payment-method/24588ec6-2a95-4b74-82a1-4842f8877615/orders } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: 79bed3b5-49f3-47ff-b136-3907fe9d86c3 } } }] } }] } } }] }, shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /payment-method/24588ec6-2a95-4b74-82a1-4842f8877615/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 565beaa9-b78f-4cca-aaf7-fcd614415a75 } } }] } }] } } }] } } } } }] }, plugin_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: plugin }, id: { example: 3a7ebec1-ad91-4f63-8ca9-96be985fb708 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, label, active, version, capabilityUpdate, capabilityInstall, capabilityEnable, capabilitySecureUninstall], properties: { name: { type: string }, label: { type: string }, active: { type: boolean }, version: { type: string }, capabilityUpdate: { type: boolean }, capabilityInstall: { type: boolean }, capabilityEnable: { type: boolean }, capabilitySecureUninstall: { type: boolean }, description: { type: string }, descriptionLong: { type: string }, createdAt: { type: string, format: date-time }, installationDate: { type: string, format: date-time }, updateDate: { type: string, format: date-time }, refreshDate: { type: string, format: date-time }, author: { type: string }, copyright: { type: string }, license: { type: string }, support: { type: string }, changes: { type: string }, link: { type: string }, storeVersion: { type: string }, storeDate: { type: string, format: date-time }, updateSource: { type: string }, updateVersion: { type: string }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /plugin/3a7ebec1-ad91-4f63-8ca9-96be985fb708 } } }] } } }] }, plugin_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: plugin }, id: { example: b61eaca0-2b12-4302-9f8d-a697c4ee2b80 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name, label, active, version, capabilityUpdate, capabilityInstall, capabilityEnable, capabilitySecureUninstall], properties: { name: { type: string }, label: { type: string }, active: { type: boolean }, version: { type: string }, capabilityUpdate: { type: boolean }, capabilityInstall: { type: boolean }, capabilityEnable: { type: boolean }, capabilitySecureUninstall: { type: boolean }, description: { type: string }, descriptionLong: { type: string }, createdAt: { type: string, format: date-time }, installationDate: { type: string, format: date-time }, updateDate: { type: string, format: date-time }, refreshDate: { type: string, format: date-time }, author: { type: string }, copyright: { type: string }, license: { type: string }, support: { type: string }, changes: { type: string }, link: { type: string }, storeVersion: { type: string }, storeDate: { type: string, format: date-time }, updateSource: { type: string }, updateVersion: { type: string }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /plugin/b61eaca0-2b12-4302-9f8d-a697c4ee2b80 } } }] }, relationships: { properties: { configForms: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /plugin/b61eaca0-2b12-4302-9f8d-a697c4ee2b80/configForms } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form }, id: { type: string, example: 8569a9fd-e030-4a5f-9b4b-61c42458ab6d } } }] } }] } } }] }, paymentMethods: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /plugin/b61eaca0-2b12-4302-9f8d-a697c4ee2b80/paymentMethods } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: 802a0c4e-61fe-48f3-abf0-5127cc684e00 } } }] } }] } } }] }, shopTemplates: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /plugin/b61eaca0-2b12-4302-9f8d-a697c4ee2b80/shopTemplates } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: b937a10a-babb-43d9-8d1e-13eba0e0dea4 } } }] } }] } } }] } } } } }] }, product_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product }, id: { example: bc4c644a-6433-4de4-8899-134b03de8b90 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { taxId: { type: string }, manufacturerId: { type: string }, unitId: { type: string }, name: { type: string }, isMain: { type: boolean }, active: { type: boolean }, supplierNumber: { type: string }, ean: { type: string }, stock: { type: integer }, isCloseout: { type: boolean }, minStock: { type: integer }, purchaseSteps: { type: integer }, maxPurchase: { type: integer }, minPurchase: { type: integer }, purchaseUnit: { type: number, format: float }, referenceUnit: { type: number, format: float }, shippingFree: { type: boolean }, purchasePrice: { type: number, format: float }, pseudoSales: { type: integer }, markAsTopseller: { type: boolean }, sales: { type: integer }, position: { type: integer }, weight: { type: number, format: float }, width: { type: number, format: float }, height: { type: number, format: float }, length: { type: number, format: float }, template: { type: string }, allowNotification: { type: boolean }, releaseDate: { type: string, format: date-time }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, containerId: { type: string }, priceGroupId: { type: string }, categoryTree: { type: string }, additionalText: { type: string }, keywords: { type: string }, description: { type: string }, descriptionLong: { type: string }, metaTitle: { type: string }, packUnit: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product/bc4c644a-6433-4de4-8899-134b03de8b90 } } }] }, relationships: { properties: { tax: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/bc4c644a-6433-4de4-8899-134b03de8b90/tax } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax }, id: { type: string, example: 91cf2651-290c-4b6a-ad01-08dce56954f7 } } }] } } }] }, manufacturer: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/bc4c644a-6433-4de4-8899-134b03de8b90/manufacturer } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_manufacturer }, id: { type: string, example: bd026de5-a323-438d-8691-409463293878 } } }] } } }] }, unit: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/bc4c644a-6433-4de4-8899-134b03de8b90/unit } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: unit }, id: { type: string, example: e9ba1be9-f12e-4228-95ee-5af4cee51ad1 } } }] } } }] }, listingPrices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/bc4c644a-6433-4de4-8899-134b03de8b90/listingPrices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_listing_price }, id: { type: string, example: 690f894b-c6f4-4d75-9844-6478e7781482 } } }] } }] } } }] }, prices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/bc4c644a-6433-4de4-8899-134b03de8b90/prices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_price }, id: { type: string, example: 7d6ed815-0c91-4cb4-8c59-d646cf480f3a } } }] } }] } } }] }, canonicalUrl: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/bc4c644a-6433-4de4-8899-134b03de8b90/canonicalUrl } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: seo_url }, id: { type: string, example: e0406862-e093-43bc-b540-63bfc1d0edde } } }] } } }] } } } } }] }, product_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product }, id: { example: dd07be08-2bb2-452b-8996-3566de91444c }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { taxId: { type: string }, manufacturerId: { type: string }, unitId: { type: string }, name: { type: string }, isMain: { type: boolean }, active: { type: boolean }, supplierNumber: { type: string }, ean: { type: string }, stock: { type: integer }, isCloseout: { type: boolean }, minStock: { type: integer }, purchaseSteps: { type: integer }, maxPurchase: { type: integer }, minPurchase: { type: integer }, purchaseUnit: { type: number, format: float }, referenceUnit: { type: number, format: float }, shippingFree: { type: boolean }, purchasePrice: { type: number, format: float }, pseudoSales: { type: integer }, markAsTopseller: { type: boolean }, sales: { type: integer }, position: { type: integer }, weight: { type: number, format: float }, width: { type: number, format: float }, height: { type: number, format: float }, length: { type: number, format: float }, template: { type: string }, allowNotification: { type: boolean }, releaseDate: { type: string, format: date-time }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, containerId: { type: string }, priceGroupId: { type: string }, categoryTree: { type: string }, additionalText: { type: string }, keywords: { type: string }, description: { type: string }, descriptionLong: { type: string }, metaTitle: { type: string }, packUnit: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product/dd07be08-2bb2-452b-8996-3566de91444c } } }] }, relationships: { properties: { tax: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/tax } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax }, id: { type: string, example: 5061693c-0fc6-4c64-81d5-d79ef957b66f } } }] } } }] }, manufacturer: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/manufacturer } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_manufacturer }, id: { type: string, example: 1d31bbcc-0687-4ab7-a4fc-ec7956260e8f } } }] } } }] }, unit: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/unit } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: unit }, id: { type: string, example: 8c182360-a787-404b-93b0-19f3297ae998 } } }] } } }] }, listingPrices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/listingPrices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_listing_price }, id: { type: string, example: 456ab5b2-fc10-4771-be1f-d9fb1e6ec7d1 } } }] } }] } } }] }, media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_media }, id: { type: string, example: 95efee4a-a78f-4935-96ec-15c9e32ade70 } } }] } }] } } }] }, prices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/prices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_price }, id: { type: string, example: 607308ae-49e0-420f-aea1-9c601f6267cb } } }] } }] } } }] }, searchKeywords: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/searchKeywords } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_search_keyword }, id: { type: string, example: df7abb7b-e8a0-4bba-8aeb-8767488bf34f } } }] } }] } } }] }, categories: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/categories } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: category }, id: { type: string, example: c0373fdd-fd28-4b70-ace6-63667e60ff47 } } }] } }] } } }] }, seoCategories: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/seoCategories } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: category }, id: { type: string, example: 52b1c75f-302f-4fe4-9cf3-6e394372f628 } } }] } }] } } }] }, tabs: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/tabs } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_stream }, id: { type: string, example: 9e5e0833-288d-48fd-af3e-3200fc9122e9 } } }] } }] } } }] }, streams: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/streams } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_stream }, id: { type: string, example: a41f11ac-8d5c-4e1d-8bed-a37d3c91f297 } } }] } }] } } }] }, canonicalUrl: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product/dd07be08-2bb2-452b-8996-3566de91444c/canonicalUrl } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: seo_url }, id: { type: string, example: 76e3c0a8-30f1-43a3-b4d7-ce37bef6d0f0 } } }] } } }] } } } } }] }, product_listing_price_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_listing_price }, id: { example: 5a9d4aff-136e-4a93-9372-51c7a73e2517 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [productId, customerGroupId, sortingPrice, price, displayFromPrice], properties: { productId: { type: string }, customerGroupId: { type: string }, sortingPrice: { type: number, format: float }, price: { type: number, format: float }, displayFromPrice: { type: boolean } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-listing-price/5a9d4aff-136e-4a93-9372-51c7a73e2517 } } }] }, relationships: { properties: { customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-listing-price/5a9d4aff-136e-4a93-9372-51c7a73e2517/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: 545e7f3a-3c89-4b56-96bf-54dcdb764a5b } } }] } } }] } } } } }] }, product_listing_price_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_listing_price }, id: { example: bf6e8fd7-bc05-4f8f-8dc5-e32bad47790a }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [productId, customerGroupId, sortingPrice, price, displayFromPrice], properties: { productId: { type: string }, customerGroupId: { type: string }, sortingPrice: { type: number, format: float }, price: { type: number, format: float }, displayFromPrice: { type: boolean } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-listing-price/bf6e8fd7-bc05-4f8f-8dc5-e32bad47790a } } }] }, relationships: { properties: { product: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-listing-price/bf6e8fd7-bc05-4f8f-8dc5-e32bad47790a/product } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: af147e9a-f9df-4400-bc5b-f81643f632c8 } } }] } } }] }, customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-listing-price/bf6e8fd7-bc05-4f8f-8dc5-e32bad47790a/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: b721e92d-6217-456e-8fe6-0cf30405cf08 } } }] } } }] } } } } }] }, product_manufacturer_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_manufacturer }, id: { example: 2f176ea9-7092-4025-b0c8-cb76b5bda81c }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { mediaId: { type: string }, name: { type: string }, link: { type: string }, updatedAt: { type: string, format: date-time }, createdAt: { type: string, format: date-time }, description: { type: string }, metaTitle: { type: string }, metaDescription: { type: string }, metaKeywords: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-manufacturer/2f176ea9-7092-4025-b0c8-cb76b5bda81c } } }] } } }] }, product_manufacturer_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_manufacturer }, id: { example: 64e30b79-73bc-42f4-83b0-d36d8a4b9452 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { mediaId: { type: string }, name: { type: string }, link: { type: string }, updatedAt: { type: string, format: date-time }, createdAt: { type: string, format: date-time }, description: { type: string }, metaTitle: { type: string }, metaDescription: { type: string }, metaKeywords: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-manufacturer/64e30b79-73bc-42f4-83b0-d36d8a4b9452 } } }] }, relationships: { properties: { media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-manufacturer/64e30b79-73bc-42f4-83b0-d36d8a4b9452/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: 4c38a056-aff8-4c56-ba39-840e3e2086e6 } } }] } } }] }, products: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-manufacturer/64e30b79-73bc-42f4-83b0-d36d8a4b9452/products } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 8e8e7741-1dfc-4586-86b9-36937e82df53 } } }] } }] } } }] } } } } }] }, product_media_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_media }, id: { example: 027cc80f-d9d0-4e99-9646-5cc294feb006 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [productId, mediaId, isCover], properties: { productId: { type: string }, mediaId: { type: string }, isCover: { type: boolean }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, parentId: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-media/027cc80f-d9d0-4e99-9646-5cc294feb006 } } }] }, relationships: { properties: { media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-media/027cc80f-d9d0-4e99-9646-5cc294feb006/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: 8c27b59d-5ac1-4b07-8223-aeb69395d305 } } }] } } }] } } } } }] }, product_media_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_media }, id: { example: fdf731cd-b401-4c73-9b1c-a9a8a69bc8b1 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [productId, mediaId, isCover], properties: { productId: { type: string }, mediaId: { type: string }, isCover: { type: boolean }, position: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, parentId: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-media/fdf731cd-b401-4c73-9b1c-a9a8a69bc8b1 } } }] }, relationships: { properties: { product: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-media/fdf731cd-b401-4c73-9b1c-a9a8a69bc8b1/product } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 7edf8b88-f22c-438a-a7da-4cc5482f12c9 } } }] } } }] }, media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-media/fdf731cd-b401-4c73-9b1c-a9a8a69bc8b1/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: 53186b1d-03d3-48ad-9c68-5eac752fa106 } } }] } } }] } } } } }] }, product_price_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_price }, id: { example: ef6f18a6-05cf-4915-885b-bd27d957d45f }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerGroupId, productId], properties: { customerGroupId: { type: string }, productId: { type: string }, quantityStart: { type: integer }, quantityEnd: { type: integer }, price: { type: number, format: float }, pseudoPrice: { type: number, format: float }, basePrice: { type: number, format: float }, percentage: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-price/ef6f18a6-05cf-4915-885b-bd27d957d45f } } }] }, relationships: { properties: { customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-price/ef6f18a6-05cf-4915-885b-bd27d957d45f/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: b48cfbde-9518-4c0d-9eda-1994ad46e2a7 } } }] } } }] } } } } }] }, product_price_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_price }, id: { example: 20286b5b-b732-45a4-9390-d996b46e1f14 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [customerGroupId, productId], properties: { customerGroupId: { type: string }, productId: { type: string }, quantityStart: { type: integer }, quantityEnd: { type: integer }, price: { type: number, format: float }, pseudoPrice: { type: number, format: float }, basePrice: { type: number, format: float }, percentage: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-price/20286b5b-b732-45a4-9390-d996b46e1f14 } } }] }, relationships: { properties: { customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-price/20286b5b-b732-45a4-9390-d996b46e1f14/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: 7bfae69f-b2b4-4c52-9ce6-73a320117864 } } }] } } }] }, product: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-price/20286b5b-b732-45a4-9390-d996b46e1f14/product } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 6fd96c80-dc35-4aa7-857b-c79ef70a5eac } } }] } } }] } } } } }] }, product_search_keyword_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_search_keyword }, id: { example: 0ed7d7ea-460b-4b8b-bbf4-182a021a44a5 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [keyword, shopId, productId, ranking], properties: { keyword: { type: string }, shopId: { type: string }, productId: { type: string }, ranking: { type: number, format: float } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-search-keyword/0ed7d7ea-460b-4b8b-bbf4-182a021a44a5 } } }] } } }] }, product_search_keyword_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_search_keyword }, id: { example: 9ab776a8-ee96-4cf0-aff0-1221eb0ac80d }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [keyword, shopId, productId, ranking], properties: { keyword: { type: string }, shopId: { type: string }, productId: { type: string }, ranking: { type: number, format: float } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-search-keyword/9ab776a8-ee96-4cf0-aff0-1221eb0ac80d } } }] }, relationships: { properties: { shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-search-keyword/9ab776a8-ee96-4cf0-aff0-1221eb0ac80d/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: ca24e736-efca-4758-8003-0c30338f8c4f } } }] } } }] }, product: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-search-keyword/9ab776a8-ee96-4cf0-aff0-1221eb0ac80d/product } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 99946445-1b3d-498d-8ae6-2eb4f496d183 } } }] } } }] } } } } }] }, product_stream_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_stream }, id: { example: 4a6c7e4f-cc0a-4b1c-8085-c3a65641e38d }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { listingSortingId: { type: string }, name: { type: string }, conditions: { type: string }, type: { type: integer }, description: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-stream/4a6c7e4f-cc0a-4b1c-8085-c3a65641e38d } } }] }, relationships: { properties: { listingSorting: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-stream/4a6c7e4f-cc0a-4b1c-8085-c3a65641e38d/listingSorting } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: listing_sorting }, id: { type: string, example: 348d6a91-f2af-4b7e-b140-8f49bab6b0a2 } } }] } } }] } } } } }] }, product_stream_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: product_stream }, id: { example: 54cde5d9-8209-48a4-9450-5fcb60a8096c }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [name], properties: { listingSortingId: { type: string }, name: { type: string }, conditions: { type: string }, type: { type: integer }, description: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /product-stream/54cde5d9-8209-48a4-9450-5fcb60a8096c } } }] }, relationships: { properties: { listingSorting: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-stream/54cde5d9-8209-48a4-9450-5fcb60a8096c/listingSorting } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: listing_sorting }, id: { type: string, example: 35a05d18-bbbc-452b-a7c6-217ad026e09c } } }] } } }] }, categories: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-stream/54cde5d9-8209-48a4-9450-5fcb60a8096c/categories } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: category }, id: { type: string, example: dffe6e9c-e9f1-446e-b844-8c7b91acb4df } } }] } }] } } }] }, productTabs: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-stream/54cde5d9-8209-48a4-9450-5fcb60a8096c/productTabs } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: f0ef941b-4801-4cec-9e77-117ec6c35ab0 } } }] } }] } } }] }, products: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /product-stream/54cde5d9-8209-48a4-9450-5fcb60a8096c/products } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 20a91ac0-a4bb-4b7e-b1ce-3e307f764339 } } }] } }] } } }] } } } } }] }, seo_url_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: seo_url }, id: { example: 801e3c88-fe1a-4057-ae60-7fdf7a5d026a }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopId, name, foreignKey, pathInfo, seoPathInfo], properties: { shopId: { type: string }, name: { type: string }, foreignKey: { type: string }, pathInfo: { type: string }, seoPathInfo: { type: string }, isCanonical: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, url: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /seo-url/801e3c88-fe1a-4057-ae60-7fdf7a5d026a } } }] } } }] }, seo_url_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: seo_url }, id: { example: f65d2d27-404f-4e44-8e72-cdd49933fe9a }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopId, name, foreignKey, pathInfo, seoPathInfo], properties: { shopId: { type: string }, name: { type: string }, foreignKey: { type: string }, pathInfo: { type: string }, seoPathInfo: { type: string }, isCanonical: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, url: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /seo-url/f65d2d27-404f-4e44-8e72-cdd49933fe9a } } }] }, relationships: { properties: { shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /seo-url/f65d2d27-404f-4e44-8e72-cdd49933fe9a/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: b3e4bebc-0a89-4f0d-bb95-0c1d59d5841c } } }] } } }] } } } } }] }, shipping_method_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shipping_method }, id: { example: 40065e30-4ba0-47e7-9005-08ce963f0971 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [type, bindShippingfree, bindLaststock, name], properties: { customerGroupId: { type: string }, type: { type: integer }, bindShippingfree: { type: boolean }, bindLaststock: { type: boolean }, name: { type: string }, active: { type: boolean }, position: { type: integer }, calculation: { type: integer }, surchargeCalculation: { type: integer }, taxCalculation: { type: integer }, shippingFree: { type: number, format: float }, bindTimeFrom: { type: integer }, bindTimeTo: { type: integer }, bindInstock: { type: boolean }, bindWeekdayFrom: { type: integer }, bindWeekdayTo: { type: integer }, bindWeightFrom: { type: number, format: float }, bindWeightTo: { type: number, format: float }, bindPriceFrom: { type: number, format: float }, bindPriceTo: { type: number, format: float }, bindSql: { type: string }, statusLink: { type: string }, calculationSql: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, description: { type: string }, comment: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shipping-method/40065e30-4ba0-47e7-9005-08ce963f0971 } } }] }, relationships: { properties: { prices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shipping-method/40065e30-4ba0-47e7-9005-08ce963f0971/prices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shipping_method_price }, id: { type: string, example: f8d69ba9-7aa9-4f2c-a0dd-2b8961377617 } } }] } }] } } }] } } } } }] }, shipping_method_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shipping_method }, id: { example: 231acf67-47de-482f-b787-948241f370d3 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [type, bindShippingfree, bindLaststock, name], properties: { customerGroupId: { type: string }, type: { type: integer }, bindShippingfree: { type: boolean }, bindLaststock: { type: boolean }, name: { type: string }, active: { type: boolean }, position: { type: integer }, calculation: { type: integer }, surchargeCalculation: { type: integer }, taxCalculation: { type: integer }, shippingFree: { type: number, format: float }, bindTimeFrom: { type: integer }, bindTimeTo: { type: integer }, bindInstock: { type: boolean }, bindWeekdayFrom: { type: integer }, bindWeekdayTo: { type: integer }, bindWeightFrom: { type: number, format: float }, bindWeightTo: { type: number, format: float }, bindPriceFrom: { type: number, format: float }, bindPriceTo: { type: number, format: float }, bindSql: { type: string }, statusLink: { type: string }, calculationSql: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, description: { type: string }, comment: { type: string } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shipping-method/231acf67-47de-482f-b787-948241f370d3 } } }] }, relationships: { properties: { customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shipping-method/231acf67-47de-482f-b787-948241f370d3/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: 77a662b0-d7f2-41ac-880e-3c2b6e355774 } } }] } } }] }, orderDeliveries: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shipping-method/231acf67-47de-482f-b787-948241f370d3/orderDeliveries } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order_delivery }, id: { type: string, example: a0a61a59-6dc4-480e-b8a8-a02dedab2b56 } } }] } }] } } }] }, prices: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shipping-method/231acf67-47de-482f-b787-948241f370d3/prices } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shipping_method_price }, id: { type: string, example: dbd8d8ce-911c-41a0-bb19-54c23553341d } } }] } }] } } }] }, shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shipping-method/231acf67-47de-482f-b787-948241f370d3/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 6a699bcb-fb3e-42ce-bddf-2d072d7a1e28 } } }] } }] } } }] } } } } }] }, shipping_method_price_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shipping_method_price }, id: { example: baab8e20-04a8-4102-8b7d-c1d9ee8b65e1 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shippingMethodId, quantityFrom, price, factor], properties: { shippingMethodId: { type: string }, quantityFrom: { type: number, format: float }, price: { type: number, format: float }, factor: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shipping-method-price/baab8e20-04a8-4102-8b7d-c1d9ee8b65e1 } } }] } } }] }, shipping_method_price_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shipping_method_price }, id: { example: 47133bba-61d3-4c75-b2f3-da5df3d1c63f }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shippingMethodId, quantityFrom, price, factor], properties: { shippingMethodId: { type: string }, quantityFrom: { type: number, format: float }, price: { type: number, format: float }, factor: { type: number, format: float }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shipping-method-price/47133bba-61d3-4c75-b2f3-da5df3d1c63f } } }] }, relationships: { properties: { shippingMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shipping-method-price/47133bba-61d3-4c75-b2f3-da5df3d1c63f/shippingMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shipping_method }, id: { type: string, example: f088021c-c0a2-43ff-9743-6047a6886d45 } } }] } } }] } } } } }] }, shop_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop }, id: { example: 5234fc50-8838-4c58-845d-9d9780e1e8bd }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [templateId, documentTemplateId, categoryId, localeId, currencyId, customerGroupId, paymentMethodId, shippingMethodId, countryId, name, position, host, basePath, baseUrl], properties: { parentId: { type: string }, templateId: { type: string }, documentTemplateId: { type: string }, categoryId: { type: string }, localeId: { type: string }, currencyId: { type: string }, customerGroupId: { type: string }, fallbackTranslationId: { type: string }, paymentMethodId: { type: string }, shippingMethodId: { type: string }, countryId: { type: string }, name: { type: string }, position: { type: integer }, host: { type: string }, basePath: { type: string }, baseUrl: { type: string }, title: { type: string }, hosts: { type: string }, isSecure: { type: boolean }, customerScope: { type: boolean }, isDefault: { type: boolean }, active: { type: boolean }, taxCalculationType: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop/5234fc50-8838-4c58-845d-9d9780e1e8bd } } }] }, relationships: { properties: { locale: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/5234fc50-8838-4c58-845d-9d9780e1e8bd/locale } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: locale }, id: { type: string, example: a246e2f0-8a34-4397-82d8-705a362e5ea5 } } }] } } }] }, currency: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/5234fc50-8838-4c58-845d-9d9780e1e8bd/currency } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: currency }, id: { type: string, example: 696aeb1d-807b-4574-9a5c-3a015c74f92a } } }] } } }] } } } } }] }, shop_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop }, id: { example: 2be3ac45-e392-4242-8e54-27eb4db1d230 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [templateId, documentTemplateId, categoryId, localeId, currencyId, customerGroupId, paymentMethodId, shippingMethodId, countryId, name, position, host, basePath, baseUrl], properties: { parentId: { type: string }, templateId: { type: string }, documentTemplateId: { type: string }, categoryId: { type: string }, localeId: { type: string }, currencyId: { type: string }, customerGroupId: { type: string }, fallbackTranslationId: { type: string }, paymentMethodId: { type: string }, shippingMethodId: { type: string }, countryId: { type: string }, name: { type: string }, position: { type: integer }, host: { type: string }, basePath: { type: string }, baseUrl: { type: string }, title: { type: string }, hosts: { type: string }, isSecure: { type: boolean }, customerScope: { type: boolean }, isDefault: { type: boolean }, active: { type: boolean }, taxCalculationType: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230 } } }] }, relationships: { properties: { parent: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/parent } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: a575d252-ed12-4f6b-9a60-a5ea15092888 } } }] } } }] }, template: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/template } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: f87245b0-1a67-401f-a010-bff6fa6b0936 } } }] } } }] }, documentTemplate: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/documentTemplate } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: 6b1131ef-94f6-4004-b474-da901ac88677 } } }] } } }] }, category: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/category } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: category }, id: { type: string, example: 65fa4e0b-a777-4bba-9ae3-487b38f54e8a } } }] } } }] }, locale: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/locale } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: locale }, id: { type: string, example: 9ccff47d-7be5-4366-9915-60da673b8f5d } } }] } } }] }, currency: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/currency } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: currency }, id: { type: string, example: 3a8f068a-65aa-43d4-a155-b6f099c3957c } } }] } } }] }, customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: 6db7b62c-cb80-4e76-8c27-645ff2746497 } } }] } } }] }, fallbackTranslation: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/fallbackTranslation } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 8e87e277-edcf-450d-9621-23b355bc7028 } } }] } } }] }, paymentMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/paymentMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: payment_method }, id: { type: string, example: 5a9f013a-8cb7-4d2d-9ea1-bd1d2c47e465 } } }] } } }] }, shippingMethod: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/shippingMethod } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shipping_method }, id: { type: string, example: 90e16fe4-7fd1-4d13-a72e-264e27856a40 } } }] } } }] }, country: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/country } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: 8fd04795-db8f-441f-88ff-efb18f66109f } } }] } } }] }, configFormFieldValues: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/configFormFieldValues } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: config_form_field_value }, id: { type: string, example: 0b729bc7-bfc8-4ff9-b2ce-51a681b3cf0d } } }] } }] } } }] }, customers: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/customers } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer }, id: { type: string, example: 71704326-f90a-4eca-b2cb-1a670ad3128e } } }] } }] } } }] }, mailAttachments: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/mailAttachments } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: mail_attachment }, id: { type: string, example: d59f5b80-5f8b-4997-8f5f-1c69ed3fb946 } } }] } }] } } }] }, orders: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/orders } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: order }, id: { type: string, example: 80d4d577-a493-4ff4-a02a-6ffe5456cfba } } }] } }] } } }] }, productSearchKeywords: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/productSearchKeywords } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_search_keyword }, id: { type: string, example: bd991beb-89f4-4e2a-b4aa-66a6da7c0493 } } }] } }] } } }] }, productSeoCategories: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/productSeoCategories } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product_seo_category }, id: { type: string, example: 3acc9787-7589-4f96-b3f9-a33f5e5fa5db } } }] } }] } } }] }, seoUrls: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/seoUrls } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: seo_url }, id: { type: string, example: 4a7fec8d-f69f-4562-8262-d32f45a28917 } } }] } }] } } }] }, children: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/children } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 507cc646-28e6-400d-a58d-26a6ddb3a22d } } }] } }] } } }] }, templateConfigFormFieldValues: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/templateConfigFormFieldValues } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form_field_value }, id: { type: string, example: 01e30274-b4a6-4cd7-9863-770902a7728f } } }] } }] } } }] }, snippets: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/snippets } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: snippet }, id: { type: string, example: d92287d4-4736-45e3-8324-7ecb5a5793b8 } } }] } }] } } }] }, currencies: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop/2be3ac45-e392-4242-8e54-27eb4db1d230/currencies } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: currency }, id: { type: string, example: 6cbef102-41ef-43c4-82af-6c8c0be692c0 } } }] } }] } } }] } } } } }] }, shop_template_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template }, id: { example: 7f2077f6-83ec-4438-bf34-af4196842246 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [template, name, emotion], properties: { pluginId: { type: string }, parentId: { type: string }, template: { type: string }, name: { type: string }, emotion: { type: boolean }, description: { type: string }, author: { type: string }, license: { type: string }, esi: { type: boolean }, styleSupport: { type: boolean }, version: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template/7f2077f6-83ec-4438-bf34-af4196842246 } } }] } } }] }, shop_template_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template }, id: { example: facb7287-b0b8-49cd-8dbd-2f7347716790 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [template, name, emotion], properties: { pluginId: { type: string }, parentId: { type: string }, template: { type: string }, name: { type: string }, emotion: { type: boolean }, description: { type: string }, author: { type: string }, license: { type: string }, esi: { type: boolean }, styleSupport: { type: boolean }, version: { type: integer }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790 } } }] }, relationships: { properties: { plugin: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790/plugin } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: plugin }, id: { type: string, example: 7c8235df-4a96-4aba-9ea2-dc2b92abb731 } } }] } } }] }, parent: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790/parent } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: 4a7620bc-3e23-4e98-9ea8-5b726afb6373 } } }] } } }] }, shops: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790/shops } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: e59ef6af-e8f8-4c60-88cf-6e69c8830fda } } }] } }] } } }] }, children: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790/children } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: 3b7d2b3e-63d6-484f-b67e-af5ae6058bb4 } } }] } }] } } }] }, configForms: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790/configForms } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form }, id: { type: string, example: d9eb1dbb-6e11-4939-a7f3-f006060fbc5a } } }] } }] } } }] }, configFormFields: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790/configFormFields } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form_field }, id: { type: string, example: a2ef0cc0-a5f7-4704-ad10-c738c3daec72 } } }] } }] } } }] }, configPresets: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template/facb7287-b0b8-49cd-8dbd-2f7347716790/configPresets } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_preset }, id: { type: string, example: 89309f34-bb16-433a-ba4f-6233ae8af3b3 } } }] } }] } } }] } } } } }] }, shop_template_config_form_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_form }, id: { example: a957e675-d7cd-464f-b9f3-af08b347f3a0 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateId, type, name], properties: { parentId: { type: string }, shopTemplateId: { type: string }, type: { type: string }, name: { type: string }, title: { type: string }, options: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-form/a957e675-d7cd-464f-b9f3-af08b347f3a0 } } }] } } }] }, shop_template_config_form_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_form }, id: { example: 805870b8-990d-4321-8528-27ff0ac9bd70 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateId, type, name], properties: { parentId: { type: string }, shopTemplateId: { type: string }, type: { type: string }, name: { type: string }, title: { type: string }, options: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-form/805870b8-990d-4321-8528-27ff0ac9bd70 } } }] }, relationships: { properties: { parent: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form/805870b8-990d-4321-8528-27ff0ac9bd70/parent } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form }, id: { type: string, example: 2450bd5a-7f77-4410-a702-e7a0a3d77b71 } } }] } } }] }, shopTemplate: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form/805870b8-990d-4321-8528-27ff0ac9bd70/shopTemplate } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: 242ddc70-04fa-48bf-94ed-ffe3f708941a } } }] } } }] }, children: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form/805870b8-990d-4321-8528-27ff0ac9bd70/children } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form }, id: { type: string, example: 03c1e7b7-64d3-45a3-ac10-69cea051dd8c } } }] } }] } } }] }, fields: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form/805870b8-990d-4321-8528-27ff0ac9bd70/fields } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form_field }, id: { type: string, example: 67ba5d44-5929-4e0b-a7b7-6937734f7ccc } } }] } }] } } }] } } } } }] }, shop_template_config_form_field_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_form_field }, id: { example: 1c85ebad-9e28-460a-90d1-3ee20fb7e08d }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateId, shopTemplateConfigFormId, type, name], properties: { shopTemplateId: { type: string }, shopTemplateConfigFormId: { type: string }, type: { type: string }, name: { type: string }, position: { type: integer }, defaultValue: { type: string }, selection: { type: string }, fieldLabel: { type: string }, supportText: { type: string }, allowBlank: { type: boolean }, attributes: { type: string }, lessCompatible: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-form-field/1c85ebad-9e28-460a-90d1-3ee20fb7e08d } } }] } } }] }, shop_template_config_form_field_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_form_field }, id: { example: 86c16f3a-93f2-4261-ab65-b793355d3205 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateId, shopTemplateConfigFormId, type, name], properties: { shopTemplateId: { type: string }, shopTemplateConfigFormId: { type: string }, type: { type: string }, name: { type: string }, position: { type: integer }, defaultValue: { type: string }, selection: { type: string }, fieldLabel: { type: string }, supportText: { type: string }, allowBlank: { type: boolean }, attributes: { type: string }, lessCompatible: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-form-field/86c16f3a-93f2-4261-ab65-b793355d3205 } } }] }, relationships: { properties: { shopTemplate: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form-field/86c16f3a-93f2-4261-ab65-b793355d3205/shopTemplate } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: a7580c63-2265-404f-beb9-ed8e0be2d379 } } }] } } }] }, shopTemplateConfigForm: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form-field/86c16f3a-93f2-4261-ab65-b793355d3205/shopTemplateConfigForm } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form }, id: { type: string, example: 5963e71d-dfcf-4aaf-af67-f165cf574ca9 } } }] } } }] }, values: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form-field/86c16f3a-93f2-4261-ab65-b793355d3205/values } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form_field_value }, id: { type: string, example: 1e56ad6a-bb94-492d-8c59-88cb9803fbb7 } } }] } }] } } }] } } } } }] }, shop_template_config_form_field_value_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_form_field_value }, id: { example: 1fd9beeb-e6a7-4a04-a08d-ce711332f9b2 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateConfigFormFieldId, shopId, value], properties: { shopTemplateConfigFormFieldId: { type: string }, shopId: { type: string }, value: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-form-field-value/1fd9beeb-e6a7-4a04-a08d-ce711332f9b2 } } }] } } }] }, shop_template_config_form_field_value_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_form_field_value }, id: { example: 5c57f594-55cb-48fe-9c5f-22f816fe08e4 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateConfigFormFieldId, shopId, value], properties: { shopTemplateConfigFormFieldId: { type: string }, shopId: { type: string }, value: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-form-field-value/5c57f594-55cb-48fe-9c5f-22f816fe08e4 } } }] }, relationships: { properties: { shopTemplateConfigFormField: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form-field-value/5c57f594-55cb-48fe-9c5f-22f816fe08e4/shopTemplateConfigFormField } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template_config_form_field }, id: { type: string, example: 39955964-c768-4913-b6ab-8719ceb021a5 } } }] } } }] }, shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-form-field-value/5c57f594-55cb-48fe-9c5f-22f816fe08e4/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: a332b755-4ffc-4842-afdb-fe25128cb535 } } }] } } }] } } } } }] }, shop_template_config_preset_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_preset }, id: { example: 3ecd5606-d090-4052-8d97-bcdac984cacb }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateId, name, description, elementValues], properties: { shopTemplateId: { type: string }, name: { type: string }, description: { type: string }, elementValues: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-preset/3ecd5606-d090-4052-8d97-bcdac984cacb } } }] } } }] }, shop_template_config_preset_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: shop_template_config_preset }, id: { example: 39b76a52-0003-4af5-bcf8-8b8258cc25ea }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopTemplateId, name, description, elementValues], properties: { shopTemplateId: { type: string }, name: { type: string }, description: { type: string }, elementValues: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /shop-template-config-preset/39b76a52-0003-4af5-bcf8-8b8258cc25ea } } }] }, relationships: { properties: { shopTemplate: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /shop-template-config-preset/39b76a52-0003-4af5-bcf8-8b8258cc25ea/shopTemplate } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop_template }, id: { type: string, example: 86466f0c-9b99-4049-8b64-226e8194dbaa } } }] } } }] } } } } }] }, snippet_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: snippet }, id: { example: 289ab016-109b-4eda-9d12-ba18cf81b981 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopId, namespace, locale, name, value], properties: { shopId: { type: string }, namespace: { type: string }, locale: { type: string }, name: { type: string }, value: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, dirty: { type: boolean } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /snippet/289ab016-109b-4eda-9d12-ba18cf81b981 } } }] } } }] }, snippet_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: snippet }, id: { example: cad6a68e-c9e7-4562-aa35-72cb278d6af5 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shopId, namespace, locale, name, value], properties: { shopId: { type: string }, namespace: { type: string }, locale: { type: string }, name: { type: string }, value: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time }, dirty: { type: boolean } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /snippet/cad6a68e-c9e7-4562-aa35-72cb278d6af5 } } }] }, relationships: { properties: { shop: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /snippet/cad6a68e-c9e7-4562-aa35-72cb278d6af5/shop } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: shop }, id: { type: string, example: 416c89da-b5ea-45fd-bd82-258ec194cf05 } } }] } } }] } } } } }] }, tax_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: tax }, id: { example: 7ef36b21-1c99-4d41-a545-5ffc98b97184 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [rate, name], properties: { rate: { type: number, format: float }, name: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /tax/7ef36b21-1c99-4d41-a545-5ffc98b97184 } } }] } } }] }, tax_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: tax }, id: { example: ce833975-cf6d-4f9c-9cf4-9a060feb0143 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [rate, name], properties: { rate: { type: number, format: float }, name: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /tax/ce833975-cf6d-4f9c-9cf4-9a060feb0143 } } }] }, relationships: { properties: { products: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /tax/ce833975-cf6d-4f9c-9cf4-9a060feb0143/products } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: d1c7e890-5d82-47f4-95c3-7f3c85e8de02 } } }] } }] } } }] }, areaRules: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /tax/ce833975-cf6d-4f9c-9cf4-9a060feb0143/areaRules } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax_area_rule }, id: { type: string, example: c8e038e6-427c-4067-91b4-59cbe8ab8f2c } } }] } }] } } }] } } } } }] }, tax_area_rule_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: tax_area_rule }, id: { example: 597d0d01-b802-4ca6-968b-c024d018202f }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [taxId, customerGroupId, taxRate, name], properties: { countryAreaId: { type: string }, countryId: { type: string }, countryStateId: { type: string }, taxId: { type: string }, customerGroupId: { type: string }, taxRate: { type: number, format: float }, name: { type: string }, active: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /tax-area-rule/597d0d01-b802-4ca6-968b-c024d018202f } } }] } } }] }, tax_area_rule_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: tax_area_rule }, id: { example: fad4037e-21bd-41a2-8f18-f588656d5cf0 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [taxId, customerGroupId, taxRate, name], properties: { countryAreaId: { type: string }, countryId: { type: string }, countryStateId: { type: string }, taxId: { type: string }, customerGroupId: { type: string }, taxRate: { type: number, format: float }, name: { type: string }, active: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /tax-area-rule/fad4037e-21bd-41a2-8f18-f588656d5cf0 } } }] }, relationships: { properties: { countryArea: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /tax-area-rule/fad4037e-21bd-41a2-8f18-f588656d5cf0/countryArea } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_area }, id: { type: string, example: 4ab24609-2d52-47cd-973b-2ff6b4be1c21 } } }] } } }] }, country: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /tax-area-rule/fad4037e-21bd-41a2-8f18-f588656d5cf0/country } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country }, id: { type: string, example: 72764833-d13b-48ed-96f3-6715feb6a6ca } } }] } } }] }, countryState: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /tax-area-rule/fad4037e-21bd-41a2-8f18-f588656d5cf0/countryState } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: country_state }, id: { type: string, example: b9ccbee3-b297-48a8-8a6e-7b32e90f958c } } }] } } }] }, tax: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /tax-area-rule/fad4037e-21bd-41a2-8f18-f588656d5cf0/tax } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: tax }, id: { type: string, example: 7a8a4892-a53a-48a7-836a-528c5c10f5ff } } }] } } }] }, customerGroup: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /tax-area-rule/fad4037e-21bd-41a2-8f18-f588656d5cf0/customerGroup } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: customer_group }, id: { type: string, example: bebec3c6-149e-46ca-8d89-8c93db23e6aa } } }] } } }] } } } } }] }, unit_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: unit }, id: { example: a2c00b13-0e1c-4289-9841-2e9ef9d90062 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shortCode, name], properties: { shortCode: { type: string }, name: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /unit/a2c00b13-0e1c-4289-9841-2e9ef9d90062 } } }] } } }] }, unit_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: unit }, id: { example: 57d9fd57-26dc-4856-819c-bc907a989e09 }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [shortCode, name], properties: { shortCode: { type: string }, name: { type: string }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /unit/57d9fd57-26dc-4856-819c-bc907a989e09 } } }] }, relationships: { properties: { products: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /unit/57d9fd57-26dc-4856-819c-bc907a989e09/products } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: product }, id: { type: string, example: 032c06fc-abd4-415b-829d-3fb7457d6940 } } }] } }] } } }] } } } } }] }, user_basic: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: user }, id: { example: 5d0335ee-1a12-47b0-8a53-ea2856a0638a }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [localeId, username, password, name, email, roleId], properties: { localeId: { type: string }, username: { type: string }, password: { type: string }, name: { type: string }, email: { type: string }, roleId: { type: string }, encoder: { type: string }, apiKey: { type: string }, sessionId: { type: string }, lastLogin: { type: string, format: date-time }, active: { type: boolean }, failedLogins: { type: integer }, lockedUntil: { type: string, format: date-time }, extendedEditor: { type: boolean }, disabledCache: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /user/5d0335ee-1a12-47b0-8a53-ea2856a0638a } } }] } } }] }, user_detail: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/resource' }, { type: object, properties: { type: { example: user }, id: { example: dbbe15d3-2b4a-44f9-b892-79fecde59a5d }, attributes: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/attributes' }, { type: object, required: [localeId, username, password, name, email, roleId], properties: { localeId: { type: string }, username: { type: string }, password: { type: string }, name: { type: string }, email: { type: string }, roleId: { type: string }, encoder: { type: string }, apiKey: { type: string }, sessionId: { type: string }, lastLogin: { type: string, format: date-time }, active: { type: boolean }, failedLogins: { type: integer }, lockedUntil: { type: string, format: date-time }, extendedEditor: { type: boolean }, disabledCache: { type: boolean }, createdAt: { type: string, format: date-time }, updatedAt: { type: string, format: date-time } } }] }, links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/links' }, { type: object, properties: { self: { type: string, example: /user/dbbe15d3-2b4a-44f9-b892-79fecde59a5d } } }] }, relationships: { properties: { locale: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /user/dbbe15d3-2b4a-44f9-b892-79fecde59a5d/locale } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: locale }, id: { type: string, example: b09501a1-bfc4-44aa-a084-97cfc7fa21f2 } } }] } } }] }, media: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationships' }, { type: object, properties: { links: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipLinks' }, { type: object, properties: { related: { type: string, format: uri-reference, example: /user/dbbe15d3-2b4a-44f9-b892-79fecde59a5d/media } } }] }, data: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/relationshipToMany' }, { type: array, items: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/linkage' }, { type: object, properties: { type: { type: string, example: media }, id: { type: string, example: f1b25311-a046-482e-8594-b825cd6d678b } } }] } }] } } }] } } } } }] } }
    securitySchemes: { bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT } }
    responses: { 404: { description: 'Not Found', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/failure' }] }, example: { errors: [{ status: '404', title: 'Not Found', description: 'Resource with given parameter was not found.' }] } } } }, 401: { description: Unauthorized, content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/failure' }] }, example: { errors: [{ status: '401', title: Unauthorized, description: 'Authorization information is missing or invalid.' }] } } } }, 400: { description: 'Bad Request', content: { application/json: { schema: { allOf: [{ $ref: 'http://jsonapi.org/schema#/definitions/failure' }] }, example: { errors: [{ status: '400', title: 'Bad Request', description: 'Bad parameters for this endpoint. See documentation for the correct ones.' }] } } } }, 204: { description: 'The resource was deleted successfully.' } }
